const E='<?xml version="1.0" encoding="UTF-8"?>',g="http://www.w3.org/1999/XSL/Transform",h=(t,e)=>t.getAttribute(e),a=(t,e="")=>(n=>(n.innerText=e||"",n))(document.createElement(t));function T(t){return new DOMParser().parseFromString(E+t,"application/xml")}function A(t){const e=t.firstElementChild,n=r=>r.replaceAll("<html:","<").replaceAll("</html:","</");if(e?.tagName==="TEMPLATE")return n(new XMLSerializer().serializeToString(e.content));const i=new XMLSerializer().serializeToString(t);return n(i.substring(i.indexOf(">")+1,i.lastIndexOf("<")))}function L(t){const e=document.createElementNS(g,"value-of");e.setAttribute("select",`//*[@slot="${t.name}"]`),t.parentNode.replaceChild(e,t)}function f(t,e,n,i){const s=((o,m,p)=>(m.append(p=a(o)),p))(e,t);return[...n].forEach(o=>s.append(i(o))),s}function N(t){return t.slot||(t.setAttribute||(t=a("span",t.textContent.replaceAll(`
`,""))),t.setAttribute("slot","")),t}export function Json2Xml(t,e){if(typeof t=="string")return t;const n=typeof e!="string";if(t instanceof Array)return n&&(e="array"),"<"+e+">"+t.map(function(o){return Json2Xml(o,e)}).join()+"</"+e+">";n&&(e="r"),e=e.replace(/[^a-z0-9]/gi,"_");var i={},r=["<"+e+" "];for(var s in t)typeof t[s]=="object"?i[s]=t[s]:r.push(s.replace(/[^a-z0-9]/gi,"_")+'="'+t[s].toString().replace(/&/gi,"&#38;")+'"');if(i){r.push(">");for(var s in i)r.push(Json2Xml(i[s],s));r.push("</"+e+">")}else r.push("/>");return r.join(`
`)}function b(t,e,n){const i=a(e),r=typeof n=="string";i.innerHTML=r?n:Json2Xml(n,e);const s=r?i:i.firstChild;[...t.children].filter(o=>o.localName===e).map(o=>o.remove()),t.append(s)}export class CustomElement extends HTMLElement{constructor(){super(),[...this.templateNode.querySelectorAll("slot")].forEach(L);const e=new XSLTProcessor;e.importStylesheet(this.xslt);const n=h(this,"tag"),i=this,r=[...this.templateNode.querySelectorAll("[slice]")].map(s=>h(s,"slice"));n&&window.customElements.define(n,class extends HTMLElement{constructor(){super();const s=a("div");f(s,"payload",this.childNodes,N),f(s,"attributes",this.attributes,l=>a(l.nodeName,l.value)),f(s,"dataset",Object.keys(this.dataset),l=>a(l,this.dataset[l]));const o=f(s,"slice",r,l=>a(l,""));this.xml=s;const m={},p=[],x=()=>{const l={};for(let c;c=p.pop();){const u=h(c.target,"slice");l[u]||(b(o,u,c.detail),l[u]=c)}Object.keys(l).length!==0&&S()};let d;const y=l=>{l.stopPropagation?.(),p.push(l),d||(d=setTimeout(()=>{x(),d=0},10))};this.onSlice=y;const S=()=>{const l=e.transformToFragment(s,document);this.innerHTML="",[...l.childNodes].forEach(c=>this.appendChild(c));for(let c of this.querySelectorAll("[slice]"))if(typeof c.sliceInit=="function"){const u=h(c,"slice");m[u]=c.sliceInit(m[u])}};S(),x()}get dce(){return i}})}get templateNode(){return this.firstElementChild?.tagName==="TEMPLATE"?this.firstElementChild.content:this}get dce(){return this}get xsltString(){return`<xsl:stylesheet version="1.0"
    xmlns:xsl="${g}">
  <xsl:output method="html" />

  <xsl:template match="/">
    <xsl:apply-templates select="//attributes"/>
  </xsl:template>
  <xsl:template match="attributes">
    ${A(this)}
  </xsl:template>

</xsl:stylesheet>`}get xslt(){return T(this.xsltString)}}window.customElements.define("custom-element",CustomElement);export default CustomElement;
//# sourceMappingURL=custom-element.js.map
