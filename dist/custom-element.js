const R="http://www.w3.org/1999/XSL/Transform",L="http://www.w3.org/1999/xhtml",P="http://exslt.org/common",F="urn:schemas-epa-wg:dce",y=(e,l)=>e.getAttribute?.(l),z=e=>e.nodeType===3,U=e=>typeof e=="string",k=e=>e&&typeof e.nodeType=="number",A=(e,l="",t=document)=>(s=>(l&&s.append(S(t.ownerDocument||t,l)),s))((t.ownerDocument||t).createElement(e)),S=(e,l)=>(e.ownerDocument||e).createTextNode(l),X=e=>{for(;e.firstChild;)e.firstChild.remove();return e},D=e=>(e.getAttributeNames().map(l=>e.removeAttribute(l)),X(e)),B=(e,l,t="")=>(s=>(s.innerText=t||"",s))(document.createElementNS(e,l)),H=e=>(e?.setAttribute("xmlns:xsl",R),e),_=e=>(e?.setAttribute("xmlns:xhtml",L),H(e)),q=(e,l)=>{const t=e.ownerDocument.createElementNS(e.namespaceURI,l);for(let s of e.attributes)t.setAttribute(s.name,s.value);for(;e.firstChild;)t.append(e.firstChild);return t};function W(e){}export function xml2dom(e){return new DOMParser().parseFromString(e,"application/xml")}export function xmlString(e){return new XMLSerializer().serializeToString(e)}function j(e,l,t,s){const n=u=>e.ownerDocument.createElement(u),d=((u,g,m)=>(g.append(m=n(u)),m))(l,e);return[...t].forEach(u=>d.append(s(u))),d}function O(e){return e.slot||(e.setAttribute||(e=A("span",e.textContent.replaceAll(`
`,""))),e.setAttribute("slot","")),e}export function Json2Xml(e,l){if(typeof e=="string")return e;const t=typeof l!="string";if(e instanceof Array)return t&&(l="array"),"<"+l+">"+e.map(function(r){return Json2Xml(r,l)}).join()+"</"+l+">";t&&(l="r"),l=l.replace(/[^a-z0-9\-]/gi,"_");var s={},n=["<"+l+" "];for(let r in e)typeof e[r]=="object"?s[r]=e[r]:n.push(r.replace(/[^a-z0-9\-]/gi,"_")+'="'+e[r].toString().replace(/&/gi,"&#38;")+'"');if(s){n.push(">");for(let r in s)n.push(Json2Xml(s[r],r));n.push("</"+l+">")}else n.push("/>");return n.join(`
`)}export function obj2node(e,l,t){const s=typeof e;if(s==="function")debugger;if(s==="string")return A(l,e,t);if(s==="number")return A(l,""+e,t);if(e instanceof Array){const r=A("array");return e.map(d=>r.append(obj2node(d,l,t))),r}const n=A(l,"",t);for(let r in e)k(e[r])||typeof e[r]=="function"||e[r]instanceof Window||(typeof e[r]!="object"?n.setAttribute(r,e[r]):n.append(obj2node(e[r],r,t)));return n}export function tagUid(e){if(T(e,"*",l=>[...l.childNodes].filter(t=>t.nodeType===3).forEach(t=>{if(t.parentNode.localName==="style")return;const s=t.data.matchAll(/{([^}]*)}/g);if(s){let n=0,r=u=>S(t,u||""),d=[];if([...s].forEach(u=>{u.index>n&&d.push(r(u.input.substring(n,u.index)));const g=e.querySelector("value-of").cloneNode();g.setAttribute("select",u[1]),d.push(g),n=u.index+u[0].length}),n<t.data.length&&d.push(r(t.data.substring(n,t.data.length))),d.length){for(let u of d)l.insertBefore(u,t);l.removeChild(t)}}})),"all"in e){let l=1;for(let t of e.all)t.setAttribute&&!t.tagName.startsWith("xsl:")&&t.setAttribute("data-dce-id",""+l++)}return e}export function createXsltFromDom(e,l="xsl:stylesheet"){if(e.tagName===l||e.documentElement?.tagName===l)return tagUid(e);const t=xml2dom(`<xsl:stylesheet version="1.0" xmlns:xsl="${R}" xmlns:xhtml="${L}" xmlns:exsl="${P}" exclude-result-prefixes="exsl" >
        <xsl:output method="xml" />
        <xsl:template match="/"><dce-root xmlns="${L}"><xsl:apply-templates select="*"/></dce-root></xsl:template>
        <xsl:template match="*[name()='template']"><xsl:apply-templates mode="sanitize" select="*|text()"/></xsl:template>
        <xsl:template match="*"><xsl:apply-templates mode="sanitize" select="*|text()"/></xsl:template>
        <xsl:template match="*[name()='svg']|*[name()='math']"><xsl:apply-templates mode="sanitize" select="."/></xsl:template>
        <xsl:template mode="sanitize" match="*[count(text())=1 and count(*)=0]"><xsl:copy><xsl:apply-templates mode="sanitize" select="@*"/><xsl:value-of select="text()"/></xsl:copy></xsl:template>
        <xsl:template mode="sanitize" match="xhtml:*[count(text())=1 and count(*)=0]"><xsl:element name="{local-name()}"><xsl:apply-templates mode="sanitize" select="@*"/><xsl:value-of select="text()"/></xsl:element></xsl:template>
        <xsl:template mode="sanitize" match="*|@*"><xsl:copy><xsl:apply-templates mode="sanitize" select="*|@*|text()"/></xsl:copy></xsl:template>
        <xsl:template mode="sanitize" match="text()[normalize-space(.) = '']"/>
        <xsl:template mode="sanitize" match="text()"><dce-text><xsl:copy/></dce-text></xsl:template>
        <xsl:template mode="sanitize" match="xsl:value-of|*[name()='slot']"><dce-text><xsl:copy><xsl:apply-templates mode="sanitize" select="*|@*|text()"/></xsl:copy></dce-text></xsl:template>
        <xsl:template mode="sanitize" match="xhtml:*"><xsl:element name="{local-name()}"><xsl:apply-templates mode="sanitize" select="*|@*|text()"/></xsl:element></xsl:template>
    </xsl:stylesheet>`),s=new XSLTProcessor,n=(a=>{T(a,"script",v=>v.remove());const h=a.content??a.firstElementChild?.content??a.body??a;xslTags.forEach(v=>T(h,v,x=>toXsl(x,h)));const E=a.firstElementChild?.content||a.content,N=v=>{const x=xml2dom("<xhtml/>"),C=x.importNode(v,!0);return x.replaceChild(C,x.documentElement),_(C)};if(E){const v=A("div");return[...E.childNodes].map(x=>v.append(x.cloneNode(!0))),N(v)}return N(a.documentElement||a.body||a)})(e),r=xml2dom(`<xsl:stylesheet version="1.0"
        xmlns:xsl="${R}"
        xmlns:xhtml="${L}"
        xmlns:dce="urn:schemas-epa-wg:dce"
        xmlns:exsl="http://exslt.org/common"
        exclude-result-prefixes="exsl"
    >
    <xsl:template match="ignore">
        <xsl:choose>
            <xsl:when test="//attr">{//attr}</xsl:when>
            <xsl:otherwise>{def}</xsl:otherwise>
        </xsl:choose>
        <xsl:value-of select="."/></xsl:template>
    <xsl:template mode="payload"  match="attributes"></xsl:template>
    <xsl:template match="/">
        <xsl:apply-templates mode="payload" select="/datadom/attributes"/>
    </xsl:template>
    <xsl:template name="slot" >
        <xsl:param name="slotname" />
        <xsl:param name="defaultvalue" />
        <xsl:choose>
            <xsl:when test="//payload/*[@slot=$slotname]">
               <xsl:copy-of select="//payload/*[@slot=$slotname]"/>
            </xsl:when>
            <xsl:otherwise>
                <xsl:copy-of select="$defaultvalue"/>
            </xsl:otherwise>
        </xsl:choose>
    </xsl:template>
    <xsl:variable name="js-injected-body">
        <xsl:call-template name="slot" >
            <xsl:with-param name="slotname" select="''"/>
            <xsl:with-param name="defaultvalue"/>
        </xsl:call-template>
    </xsl:variable>
</xsl:stylesheet>`);s.importStylesheet(t);const d=s.transformToFragment(n,document),u=(a,h)=>a.querySelector(h),g=u(r,'template[mode="payload"]');if(!d)return console.error("transformation error",{xml:n.outerHTML,xsl:xmlString(t)});const m=[];[...d.querySelectorAll("dce-root>attribute")].forEach(a=>{const h=q(a,"xsl:param"),E=y(a,"name");g.append(h);let N=y(h,"select")?.split("??");N||(N=["//"+E,`'${h.textContent}'`],D(h),h.setAttribute("name",E));let v;if(N?.length>1){h.removeAttribute("select");const x=u(r,'template[match="ignore"]>choose').cloneNode(!0);D(x.firstElementChild).append(S(x,"{"+N[0]+"}")),D(x.lastElementChild).append(S(x,"{"+N[1]+"}")),x.firstElementChild.setAttribute("test",N[0]),h.append(x),v=x.cloneNode(!0)}else v=q(a,"xsl:value-of");v.removeAttribute("name"),a.append(v),a.removeAttribute("select"),m.push(h)}),[...d.querySelectorAll("[value]")].filter(a=>a.getAttribute("value").match(/\{(.*)\?\?(.*)\}/g)).forEach(a=>{const h=y(a,"value");h&&a.setAttribute("value",evalCurly(h))});for(const a of d.childNodes)g.append(r.importNode(a,!0));[...g.querySelectorAll("template")].forEach(a=>g.ownerDocument.documentElement.append(a));const f=u(r,'call-template[name="slot"]'),i=a=>{const h=f.cloneNode(!0),E=y(a,"name")||"";E&&h.firstElementChild.setAttribute("select",`'${E}'`);for(let N of a.childNodes)h.lastElementChild.append(N);return h};T(g,"slot",a=>a.parentNode.replaceChild(i(a),a));const p=tagUid(r);return p.params=m,p}export async function xhrTemplate(e){return await new Promise((t,s)=>{const n=new XMLHttpRequest;n.open("GET",e),n.responseType="document",n.onload=()=>{n.readyState===n.DONE&&n.status===200&&t(n.responseXML||A("div",n.responseText)),s(n.statusText)},n.addEventListener("error",r=>s(r)),n.send()})}export function deepEqual(e,l,t=!1){if(e===l)return!0;if(typeof e!="object"||e===null||typeof l!="object"||l===null||Object.keys(e).length!==Object.keys(l).length)return t;for(let s in e)if(!(s in l)||!deepEqual(e[s],l[s]))return t;return!0}export const assureSlices=(e,l)=>l.split("|").map(t=>t.trim()).map(t=>{if(t.includes("/")){const s=[],n=e.ownerDocument.evaluate(t,e);for(let r;r=n.iterateNext();)s.push(r);return s}return[...e.childNodes].find(s=>s.localName===t)||A(t)}).flat();export function event2slice(e,l,t,s){assureSlices(e,l).map(n=>{const r=e.ownerDocument,d=t.sliceEventSource,u=t.sliceElement,g=()=>[...n.childNodes].filter(m=>m.nodeType===3||m.localName==="value").map(m=>m.remove());if(d.getAttributeNames().map(m=>n.setAttribute(m,y(d,m))),[...n.childNodes].filter(m=>m.localName==="event").map(m=>m.remove()),t.type==="init"&&g(),n.append(obj2node(t,"event",r)),u.hasAttribute("slice-value")){d.value===void 0?n.removeAttribute("value"):n.setAttribute("value",d.value);const m=xPath(y(u,"slice-value"),n);g(),n.append(S(r,m))}else{const m=d.value??y(u,"value");g(),m==null?[...n.childNodes].filter(w=>w.localName!=="event").map(w=>w.remove()):U(m)?n.append(S(r,m)):n.append(obj2node(m,"value",n.ownerDocument))}})}function T(e,l,t){e.querySelectorAll&&[...e.querySelectorAll(l)].forEach(t)}const M=(e,l)=>(t=>e===t?null:t&&(t.querySelector(l)||M(t,l)))(e.getRootNode()),V=async(e,l)=>{if(!e||!e.trim())return[l];if(e.startsWith("#"))return(t=>{if(!t)return[];const s=t.querySelectorAll(e);if(s.length)return[...s];const n=t.getRootNode();return n===t?[]:M(n)})(l.parentElement);try{const t=await xhrTemplate(e),s=new URL(e,location).hash;if(s){const n=t.querySelectorAll(s);return n.length?[...n]:[l]}return[t]}catch{return[l]}};export function mergeAttr(e,l){if(z(e)){if(!z(l))debugger;return}for(let t of e.attributes)t.namespaceURI?l.setAttributeNS(t.namespaceURI,t.name,t.value):l.setAttribute(t.name,t.value),t.name==="value"&&(l.value=t.value)}export function assureUnique(e,l=0){const t={};for(const s of e.childNodes){const n=y(s,"data-dce-id")||s.dceId||0;if(!t[n])n?t[n]=1:(t[n]=s.dceId=++l,s.setAttribute&&s.setAttribute("data-dce-id",s.dceId));else{const r=s.dceId=n+"-"+t[n]++;s.setAttribute&&s.setAttribute("data-dce-id",r)}s.childNodes.length&&assureUnique(s)}}export function merge(e,l){if(!l.length)return X(e);const t={};for(let s of e.childNodes)t[s.dceId],z(s)?(s.data.trim(),t[s.dceId||0]=s):t[y(s,"data-dce-id")||0]=s;for(let s of[...l]){const n=y(s,"data-dce-id")||s.dceId,r=t[n];r?(z(s)?r.nodeValue!==s.nodeValue&&(r.nodeValue=s.nodeValue):(mergeAttr(s,r),(r.childNodes.length||s.childNodes.length)&&merge(r,s.childNodes)),delete t[n]):e.append(s)}for(let s of Object.values(t))s.remove()}export function assureUID(e,l){return e.hasAttribute(l)||e.setAttribute(l,crypto.randomUUID()),e.getAttribute(l)}export const evalCurly=e=>[...e?.matchAll(/([^{}]*)(\{)([^}]+)}([^{}]*)/g)].map(t=>`${t[1]}{${xPathDefaults(t[3])}}${t[4]}`).join(""),xPathDefaults=e=>{if(!e.trim())return e;const l=e.split("??"),t=l.shift(),s=xPathDefaults(l.join("??"));return l.length?`concat( ${t} , substring( ${s} , (1+string-length( ${s} )) * string-length( ${t} ) ) )`:e},xPath=(e,l)=>{e=xPathDefaults(e);const t=l.ownerDocument.evaluate(e,l);switch(t.resultType){case XPathResult.NUMBER_TYPE:return t.numberValue;case XPathResult.STRING_TYPE:return t.stringValue}let s="";for(let n;n=t.iterateNext();)s+=n.textContent;return s},xslTags="stylesheet,transform,import,include,strip-space,preserve-space,output,key,decimal-format,namespace-alias,template,value-of,copy-of,number,apply-templates,apply-imports,for-each,sort,if,choose,when,otherwise,attribute-set,call-template,with-param,variable,param,text,processing-instruction,element,attribute,comment,copy,message,fallback".split(","),toXsl=(e,l)=>{const t=A("xsl:"+e.localName);for(let s of e.attributes)t.setAttribute(s.name,s.value);for(;e.firstChild;)t.append(e.firstChild);if(e.parentElement)e.parentElement.replaceChild(t,e);else{const s=e.parentElement||l,n=[...s.childNodes];n.forEach((r,d)=>{r===e&&(n[d]=t)}),s.replaceChildren(...n)}};export class CustomElement extends HTMLElement{static observedAttributes=["src","tag","hidden"];async connectedCallback(){const l=await V(y(this,"src"),this),t=y(this,"tag"),s=t||"dce-"+crypto.randomUUID();for(const f of l)T(f.templateNode||f.content||f,"style",i=>{const p=i.closest("slot"),a=p?`slot[name="${p.name}"]`:"";i.innerHTML=`${s} ${a}{${i.innerHTML}}`,this.append(i)});const n=l.map(f=>createXsltFromDom(f)),r=n.map((f,i)=>(i=new XSLTProcessor,i.importStylesheet(f),i));Object.defineProperty(this,"xsltString",{get:()=>n.map(f=>xmlString(f)).join(`
`)});const d=this,u=[...this.templateNode.querySelectorAll("[slice]")],g=u.map(f=>y(f,"slice")).filter(f=>!f.includes("/")).filter((f,i,p)=>p.indexOf(f)===i),m=n.reduce((f,i)=>(i.params&&f.push(...i.params),f),[]);class w extends HTMLElement{static get observedAttributes(){return m.map(i=>y(i,"name"))}#e=0;connectedCallback(){let i=this.childNodes;if(this.firstElementChild?.tagName==="TEMPLATE"){const c=this.firstElementChild;c.remove(),i=c.content.childNodes;for(const o of[...c.content.childNodes])if(o.localName==="style"){const b=assureUID(this,"data-dce-style");o.innerHTML=`${s}[data-dce-style="${b}"]{${o.innerHTML}}`,c.insertAdjacentElement("beforebegin",o)}else o.nodeType===1?c.insertAdjacentElement("beforebegin",o):o.nodeType===3&&c.insertAdjacentText("beforebegin",o.data)}const p=xml2dom("<datadom/>").documentElement,a=(c,o="")=>(b=>(o&&b.append(S(p,o)),b))(p.ownerDocument.createElement(c));j(p,"payload",i,O),this.innerHTML="",j(p,"attributes",this.attributes,c=>a(c.nodeName,c.value)),j(p,"dataset",Object.keys(this.dataset),c=>a(c,this.dataset[c]));const h=j(p,"slice",g,c=>a(c,"")),E=c=>xPath(c,h);this.xml=p;const N=[],v=()=>{const c={};for(let o;o=N.pop();){const b=y(o.sliceElement,"slice");c[b]||(event2slice(h,b,o,this),c[b]=o)}Object.keys(c).length!==0&&C()};let x;this.onSlice=c=>{c.stopPropagation?.(),c.sliceEventSource=c.currentTarget||c.target,N.push(c),x||(x=setTimeout(()=>{v(),x=0},10))};const C=this.transform=()=>{if(this.#e)debugger;this.#e=1,r.map((o,b)=>{const $=o.transformToFragment(p.ownerDocument,document);return $||console.error(`XSLT transformation error. xsl:
`,xmlString(n[b]),`
xml:
`,xmlString(p)),$}).map(o=>{o&&(assureUnique(o),merge(this,o.childNodes))}),w.observedAttributes.map(o=>{let b=y(this.firstElementChild,o);b!==y(this,o)&&(this.setAttribute(o,b),this.#t(o,b))}),T(this,"[slice]",o=>{if(!o.dceInitialized){o.dceInitialized=1;const b=y(o,"slice-event");(b||"change").split(" ").forEach($=>(o.localName==="slice"?o.parentElement:o).addEventListener($,I=>{I.sliceElement=o,this.onSlice(I)})),(!b||b.includes("init"))&&(o.hasAttribute("slice-value")||o.hasAttribute("value")||o.value?this.onSlice({type:"init",target:o,sliceElement:o}):o.value=E(y(o,"slice")))}}),this.#e=0};C(),v()}#t(i,p){let a=this.xml.querySelector(`attributes>${i}`);a?D(a).append(S(a,p)):(a=A(i,p,this.xml),this.xml.querySelector("attributes").append(a))}attributeChangedCallback(i,p,a){!this.xml||this.#e||(this.#t(i,a),this.transform())}get dce(){return d}}if(t)window.customElements.define(t,w);else{const f=s;this.setAttribute("tag",f),window.customElements.define(f,w);const i=document.createElement(f);this.getAttributeNames().forEach(p=>i.setAttribute(p,this.getAttribute(p))),i.append(...[...this.childNodes].filter(p=>p.localName!=="style")),this.append(i)}}get templateNode(){return this.firstElementChild?.tagName==="TEMPLATE"?this.firstElementChild.content:this}get dce(){return this}get xslt(){return xml2dom(this.xsltString)}}window.customElements.define("custom-element",CustomElement);export default CustomElement;
//# sourceMappingURL=custom-element.js.map
