const L="http://www.w3.org/1999/XSL/Transform",I="http://www.w3.org/1999/xhtml",X="http://exslt.org/common",q="urn:schemas-epa-wg:dce",N=(e,s)=>e.getAttribute?.(s),S=e=>e.nodeType===3,z=(e,s="")=>(t=>(t.innerText=s||"",t))(document.createElement(e)),j=(e,s)=>(e.ownerDocument||e).createTextNode(s),_=(e,s,t="")=>(l=>(l.innerText=t||"",l))(document.createElementNS(e,s)),M=e=>(e?.setAttribute("xmlns:xsl",L),e),R=e=>(e?.setAttribute("xmlns:xhtml",I),M(e));function P(e){}function E(e){return new DOMParser().parseFromString(e,"application/xml")}function w(e){return new XMLSerializer().serializeToString(e)}function v(e,s,t,l){const n=c=>e.ownerDocument.createElement(c),p=((c,x,u)=>(x.append(u=n(c)),u))(s,e);return[...t].forEach(c=>p.append(l(c))),p}function U(e){return e.slot||(e.setAttribute||(e=z("span",e.textContent.replaceAll(`
`,""))),e.setAttribute("slot","")),e}export function Json2Xml(e,s){if(typeof e=="string")return e;const t=typeof s!="string";if(e instanceof Array)return t&&(s="array"),"<"+s+">"+e.map(function(o){return Json2Xml(o,s)}).join()+"</"+s+">";t&&(s="r"),s=s.replace(/[^a-z0-9\-]/gi,"_");var l={},n=["<"+s+" "];for(let o in e)typeof e[o]=="object"?l[o]=e[o]:n.push(o.replace(/[^a-z0-9\-]/gi,"_")+'="'+e[o].toString().replace(/&/gi,"&#38;")+'"');if(l){n.push(">");for(let o in l)n.push(Json2Xml(l[o],o));n.push("</"+s+">")}else n.push("/>");return n.join(`
`)}export function tagUid(e){if(T(e,"*",s=>[...s.childNodes].filter(t=>t.nodeType===3).forEach(t=>{if(t.parentNode.localName==="style")return;const l=t.data.matchAll(/{([^}]*)}/g);if(l){let n=0,o=c=>j(t,c||""),p=[];if([...l].forEach(c=>{c.index>n&&p.push(o(c.input.substring(n,c.index)));const x=t.ownerDocument.createElement("xsl:value-of");x.setAttribute("select",c[1]),p.push(x),n=c.index+c[0].length}),n<t.data.length&&p.push(o(t.data.substring(n,t.data.length))),p.length){for(let c of p)s.insertBefore(c,t);s.removeChild(t)}}})),"all"in e){let s=1;for(let t of e.all)t.setAttribute&&!t.tagName.startsWith("xsl:")&&t.setAttribute("data-dce-id",""+s++)}return e}export function createXsltFromDom(e,s="xsl:stylesheet"){if(e.tagName===s||e.documentElement?.tagName===s)return tagUid(e);const t=E(`<xsl:stylesheet version="1.0" xmlns:xsl="${L}" xmlns:xhtml="${I}" xmlns:exsl="${X}" exclude-result-prefixes="exsl" >   
        <xsl:output method="xml" />
        <xsl:template match="/"><dce-root><xsl:apply-templates select="*"/></dce-root></xsl:template>
        <xsl:template match="*[name()='template']"><xsl:apply-templates mode="sanitize" select="*|text()"/></xsl:template>
        <xsl:template match="*"><xsl:apply-templates mode="sanitize" select="*|text()"/></xsl:template>
        <xsl:template match="*[name()='svg']|*[name()='math']"><xsl:apply-templates mode="sanitize" select="."/></xsl:template>
        <xsl:template mode="sanitize" match="*[count(text())=1 and count(*)=0]"><xsl:copy><xsl:apply-templates mode="sanitize" select="@*"/><xsl:value-of select="text()"/></xsl:copy></xsl:template>
        <xsl:template mode="sanitize" match="xhtml:*[count(text())=1 and count(*)=0]"><xsl:element name="{local-name()}"><xsl:apply-templates mode="sanitize" select="@*"/><xsl:value-of select="text()"/></xsl:element></xsl:template>
        <xsl:template mode="sanitize" match="*|@*"><xsl:copy><xsl:apply-templates mode="sanitize" select="*|@*|text()"/></xsl:copy></xsl:template>
        <xsl:template mode="sanitize" match="text()[normalize-space(.) = '']"/>
        <xsl:template mode="sanitize" match="text()"><dce-text><xsl:copy/></dce-text></xsl:template>
        <xsl:template mode="sanitize" match="xsl:value-of|*[name()='slot']"><dce-text><xsl:copy><xsl:apply-templates mode="sanitize" select="*|@*|text()"/></xsl:copy></dce-text></xsl:template>
        <xsl:template mode="sanitize" match="xhtml:*"><xsl:element name="{local-name()}"><xsl:apply-templates mode="sanitize" select="*|@*|text()"/></xsl:element></xsl:template>
    </xsl:stylesheet>`),l=new XSLTProcessor,n=(i=>{T(i,"script",h=>h.remove());const g=i.firstElementChild?.content||i.content,b=h=>R(E("<xhtml/>").importNode(h,!0));if(g){const h=z("div");return[...g.childNodes].map(A=>h.append(A.cloneNode(!0))),b(h)}return b(i.documentElement||i.body||i)})(e),o=E(`<xsl:stylesheet version="1.0"
        xmlns:xsl="${L}"
        xmlns:dce="urn:schemas-epa-wg:dce"
        xmlns:exsl="http://exslt.org/common"
        exclude-result-prefixes="exsl"
    >
    <xsl:template mode="payload"  match="attributes"></xsl:template>
    <xsl:template match="/">
        <xsl:apply-templates mode="payload" select="/datadom/attributes"/>
    </xsl:template>
    <xsl:template name="slot" >
        <xsl:param name="slotname" />
        <xsl:param name="defaultvalue" />
        <xsl:choose>
            <xsl:when test="//payload/*[@slot=$slotname]">
               <xsl:copy-of select="//payload/*[@slot=$slotname]"/>
            </xsl:when>
            <xsl:otherwise>
                <xsl:copy-of select="$defaultvalue"/>
            </xsl:otherwise>
        </xsl:choose>
    </xsl:template>
    <xsl:variable name="js-injected-body">
        <xsl:call-template name="slot" >
            <xsl:with-param name="slotname" select="''"/>
            <xsl:with-param name="defaultvalue"/>
        </xsl:call-template>
    </xsl:variable>
</xsl:stylesheet>`);l.importStylesheet(t);const p=l.transformToFragment(n,document),c=(i,g)=>i.querySelector(g),x=c(o,'template[mode="payload"]');if(!p)return console.error("transformation error",{xml:n.outerHTML,xsl:w(t)});for(const i of p.childNodes)x.append(o.importNode(i,!0));[...x.querySelectorAll("template")].forEach(i=>x.ownerDocument.documentElement.append(i));const r=c(o,'call-template[name="slot"]'),f=i=>{const g=r.cloneNode(!0),b=N(i,"name")||"";b&&g.firstElementChild.setAttribute("select",`'${b}'`);for(let h of i.childNodes)g.lastElementChild.append(h);return g};return T(x,"slot",i=>i.parentNode.replaceChild(f(i),i)),tagUid(o)}export async function xhrTemplate(e){return await new Promise((t,l)=>{const n=new XMLHttpRequest;n.open("GET",e),n.responseType="document",n.onload=()=>{n.readyState===n.DONE&&n.status===200&&t(n.responseXML||z("div",n.responseText)),l(n.statusText)},n.addEventListener("error",o=>l(o)),n.send()})}export function deepEqual(e,s,t=!1){if(e===s)return!0;if(typeof e!="object"||e===null||typeof s!="object"||s===null||Object.keys(e).length!==Object.keys(s).length)return t;for(let l in e)if(!(l in s)||!deepEqual(e[l],s[l]))return t;return!0}export function injectSlice(e,s,t){const o=typeof t=="string"?((p,c="")=>(x=>(x.append(j(e,c||"")),x))(e.ownerDocument.createElement(p)))(s,t):document.adoptNode(E(Json2Xml(t,s)).documentElement);[...e.children].filter(p=>p.localName===s).map(p=>p.remove()),o.data=t,e.append(o)}function T(e,s,t){e.querySelectorAll&&[...e.querySelectorAll(s)].forEach(t)}const $=(e,s)=>(t=>e===t?null:t&&(t.querySelector(s)||$(t,s)))(e.getRootNode()),H=async(e,s)=>{if(!e||!e.trim())return[s];if(e.startsWith("#"))return(t=>{if(!t)return[];const l=t.querySelectorAll(e);if(l.length)return[...l];const n=t.getRootNode();return n===t?[]:$(n)})(s.parentElement);try{const t=await xhrTemplate(e),l=new URL(e,location).hash;if(l){const n=t.querySelectorAll(l);return n.length?[...n]:[s]}return[t]}catch{return[s]}};export function mergeAttr(e,s){if(S(e)){if(!S(s))debugger;return}for(let t of e.attributes)t.namespaceURI?s.setAttributeNS(t.namespaceURI,t.name,t.value):s.setAttribute(t.name,t.value)}export function assureUnique(e,s=0){const t={};for(const l of e.childNodes){const n=N(l,"data-dce-id")||l.dceId||0;if(!t[n])n?t[n]=1:(t[n]=l.dceId=++s,l.setAttribute&&l.setAttribute("data-dce-id",l.dceId));else{const o=l.dceId=n+"-"+t[n]++;l.setAttribute&&l.setAttribute("data-dce-id",o)}l.childNodes.length&&assureUnique(l)}}export function merge(e,s){const t={};for(let l of e.childNodes)t[l.dceId],S(l)?(l.data.trim(),t[l.dceId||0]=l):t[N(l,"data-dce-id")||0]=l;for(let l of[...s]){const n=t[N(l,"data-dce-id")||l.dceId];n?S(l)?n.nodeValue!==l.nodeValue&&(n.nodeValue=l.nodeValue):(mergeAttr(n,l),(n.childNodes.length||l.childNodes.length)&&merge(n,l.childNodes)):e.append(l)}}export function assureUID(e,s){return e.hasAttribute(s)||e.setAttribute(s,crypto.randomUUID()),e.getAttribute(s)}export class CustomElement extends HTMLElement{async connectedCallback(){const s=await H(N(this,"src"),this),t=N(this,"tag"),l=t||"dce-"+crypto.randomUUID();for(const u of s)T(u.templateNode||u.content||u,"style",r=>{const f=r.closest("slot"),i=f?`slot[name="${f.name}"]`:"";r.innerHTML=`${l} ${i}{${r.innerHTML}}`,this.append(r)});const n=s.map(u=>createXsltFromDom(u)),o=n.map((u,r)=>(r=new XSLTProcessor,r.importStylesheet(u),r));Object.defineProperty(this,"xsltString",{get:()=>n.map(u=>w(u)).join(`
`)});const p=this,c=[...this.templateNode.querySelectorAll("[slice]")].map(u=>N(u,"slice"));class x extends HTMLElement{connectedCallback(){if(this.firstElementChild?.tagName==="TEMPLATE"){const a=this.firstElementChild;for(const m of[...a.content.childNodes])if(m.localName==="style"){const y=assureUID(this,"data-dce-style");m.innerHTML=`${l}[data-dce-style="${y}"]{${m.innerHTML}}`,a.insertAdjacentElement("beforebegin",m)}else m.nodeType===1?a.insertAdjacentElement("beforebegin",m):m.nodeType===3&&a.insertAdjacentText("beforebegin",m.data);a.remove()}const r=E("<datadom/>").documentElement,f=(a,m="")=>(y=>(m&&y.append(j(r,m)),y))(r.ownerDocument.createElement(a));v(r,"payload",this.childNodes,U),this.innerHTML="",v(r,"attributes",this.attributes,a=>f(a.nodeName,a.value)),v(r,"dataset",Object.keys(this.dataset),a=>f(a,this.dataset[a]));const i=v(r,"slice",c,a=>f(a,""));this.xml=r;const g=[],b=()=>{const a={};for(let m;m=g.pop();){const y=N(m.target,"slice");a[y]||(injectSlice(i,y,typeof m.detail=="object"?{...m.detail}:m.detail),a[y]=m)}Object.keys(a).length!==0&&A()};let h;this.onSlice=a=>{a.stopPropagation?.();const m=N(a.target,"slice");deepEqual(a.detail,[...i.children].find(y=>y.localName===m)?.data)||(g.push(a),h||(h=setTimeout(()=>{b(),h=0},10)))};const A=()=>{o.map((d,C)=>{const D=d.transformToFragment(r,document);return D||console.error(`XSLT transformation error. xsl:
`,w(n[C]),`
xml:
`,w(r)),D}).map(d=>{d&&(assureUnique(d),merge(this,d.childNodes))});const m=d=>this.onSlice({detail:d[N(d,"slice-prop")||"value"],target:d}),y=d=>d.hasAttribute("slice-prop")||d.hasAttribute("value")||d.value;T(this,"[slice]",d=>{d.dceInitialized||(d.dceInitialized=1,d.addEventListener(N(d,"slice-update")||"change",()=>m(d)),y(d)&&m(d))})};A(),b()}get dce(){return p}}if(t)window.customElements.define(t,x);else{const u=l;window.customElements.define(u,x);const r=document.createElement(u);this.getAttributeNames().forEach(f=>r.setAttribute(f,this.getAttribute(f))),r.append(...[...this.childNodes].filter(f=>f.localName!=="style")),this.append(r)}}get templateNode(){return this.firstElementChild?.tagName==="TEMPLATE"?this.firstElementChild.content:this}get dce(){return this}get xslt(){return E(this.xsltString)}}window.customElements.define("custom-element",CustomElement);export default CustomElement;
//# sourceMappingURL=custom-element.js.map
