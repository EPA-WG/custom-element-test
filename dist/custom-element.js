const R="http://www.w3.org/1999/XSL/Transform",L="http://www.w3.org/1999/xhtml",M="http://exslt.org/common",V="urn:schemas-epa-wg:dce",y=(e,l)=>e.getAttribute?.(l),z=e=>e.nodeType===3,P=e=>typeof e=="string",U=e=>e&&typeof e.nodeType=="number",A=(e,l="",t=document)=>(s=>(l&&s.append(w(t.ownerDocument||t,l)),s))((t.ownerDocument||t).createElement(e)),w=(e,l)=>(e.ownerDocument||e).createTextNode(l),D=e=>{for(;e.firstChild;)e.firstChild.remove();return e.getAttributeNames().map(l=>e.removeAttribute(l)),e},F=(e,l,t="")=>(s=>(s.innerText=t||"",s))(document.createElementNS(e,l)),k=e=>(e?.setAttribute("xmlns:xsl",R),e),H=e=>(e?.setAttribute("xmlns:xhtml",L),k(e)),X=(e,l)=>{const t=e.ownerDocument.createElementNS(e.namespaceURI,l);for(let s of e.attributes)t.setAttribute(s.name,s.value);for(;e.firstChild;)t.append(e.firstChild);return t};function B(e){}export function xml2dom(e){return new DOMParser().parseFromString(e,"application/xml")}export function xmlString(e){return new XMLSerializer().serializeToString(e)}function j(e,l,t,s){const n=m=>e.ownerDocument.createElement(m),h=((m,g,u)=>(g.append(u=n(m)),u))(l,e);return[...t].forEach(m=>h.append(s(m))),h}function _(e){return e.slot||(e.setAttribute||(e=A("span",e.textContent.replaceAll(`
`,""))),e.setAttribute("slot","")),e}export function Json2Xml(e,l){if(typeof e=="string")return e;const t=typeof l!="string";if(e instanceof Array)return t&&(l="array"),"<"+l+">"+e.map(function(o){return Json2Xml(o,l)}).join()+"</"+l+">";t&&(l="r"),l=l.replace(/[^a-z0-9\-]/gi,"_");var s={},n=["<"+l+" "];for(let o in e)typeof e[o]=="object"?s[o]=e[o]:n.push(o.replace(/[^a-z0-9\-]/gi,"_")+'="'+e[o].toString().replace(/&/gi,"&#38;")+'"');if(s){n.push(">");for(let o in s)n.push(Json2Xml(s[o],o));n.push("</"+l+">")}else n.push("/>");return n.join(`
`)}export function obj2node(e,l,t){if(typeof e=="function")debugger;if(typeof e=="string")return A(l,e,t);if(e instanceof Array){const n=A("array");return e.map(o=>n.append(obj2node(o,l,t))),n}const s=A(l,"",t);for(let n in e)U(e[n])||typeof e[n]=="function"||e[n]instanceof Window||(typeof e[n]!="object"?s.setAttribute(n,e[n]):s.append(obj2node(e[n],n,t)));return s}export function tagUid(e){if(S(e,"*",l=>[...l.childNodes].filter(t=>t.nodeType===3).forEach(t=>{if(t.parentNode.localName==="style")return;const s=t.data.matchAll(/{([^}]*)}/g);if(s){let n=0,o=m=>w(t,m||""),h=[];if([...s].forEach(m=>{m.index>n&&h.push(o(m.input.substring(n,m.index)));const g=e.querySelector("value-of").cloneNode();g.setAttribute("select",m[1]),h.push(g),n=m.index+m[0].length}),n<t.data.length&&h.push(o(t.data.substring(n,t.data.length))),h.length){for(let m of h)l.insertBefore(m,t);l.removeChild(t)}}})),"all"in e){let l=1;for(let t of e.all)t.setAttribute&&!t.tagName.startsWith("xsl:")&&t.setAttribute("data-dce-id",""+l++)}return e}export function createXsltFromDom(e,l="xsl:stylesheet"){if(e.tagName===l||e.documentElement?.tagName===l)return tagUid(e);const t=xml2dom(`<xsl:stylesheet version="1.0" xmlns:xsl="${R}" xmlns:xhtml="${L}" xmlns:exsl="${M}" exclude-result-prefixes="exsl" >
        <xsl:output method="xml" />
        <xsl:template match="/"><dce-root xmlns="${L}"><xsl:apply-templates select="*"/></dce-root></xsl:template>
        <xsl:template match="*[name()='template']"><xsl:apply-templates mode="sanitize" select="*|text()"/></xsl:template>
        <xsl:template match="*"><xsl:apply-templates mode="sanitize" select="*|text()"/></xsl:template>
        <xsl:template match="*[name()='svg']|*[name()='math']"><xsl:apply-templates mode="sanitize" select="."/></xsl:template>
        <xsl:template mode="sanitize" match="*[count(text())=1 and count(*)=0]"><xsl:copy><xsl:apply-templates mode="sanitize" select="@*"/><xsl:value-of select="text()"/></xsl:copy></xsl:template>
        <xsl:template mode="sanitize" match="xhtml:*[count(text())=1 and count(*)=0]"><xsl:element name="{local-name()}"><xsl:apply-templates mode="sanitize" select="@*"/><xsl:value-of select="text()"/></xsl:element></xsl:template>
        <xsl:template mode="sanitize" match="*|@*"><xsl:copy><xsl:apply-templates mode="sanitize" select="*|@*|text()"/></xsl:copy></xsl:template>
        <xsl:template mode="sanitize" match="text()[normalize-space(.) = '']"/>
        <xsl:template mode="sanitize" match="text()"><dce-text><xsl:copy/></dce-text></xsl:template>
        <xsl:template mode="sanitize" match="xsl:value-of|*[name()='slot']"><dce-text><xsl:copy><xsl:apply-templates mode="sanitize" select="*|@*|text()"/></xsl:copy></dce-text></xsl:template>
        <xsl:template mode="sanitize" match="xhtml:*"><xsl:element name="{local-name()}"><xsl:apply-templates mode="sanitize" select="*|@*|text()"/></xsl:element></xsl:template>
    </xsl:stylesheet>`),s=new XSLTProcessor,n=(a=>{S(a,"script",v=>v.remove());const f=a.content??a.firstElementChild?.content??a.body??a;xslTags.forEach(v=>S(f,v,x=>toXsl(x,f)));const E=a.firstElementChild?.content||a.content,N=v=>{const x=xml2dom("<xhtml/>"),C=x.importNode(v,!0);return x.replaceChild(C,x.documentElement),H(C)};if(E){const v=A("div");return[...E.childNodes].map(x=>v.append(x.cloneNode(!0))),N(v)}return N(a.documentElement||a.body||a)})(e),o=xml2dom(`<xsl:stylesheet version="1.0"
        xmlns:xsl="${R}"
        xmlns:xhtml="${L}"
        xmlns:dce="urn:schemas-epa-wg:dce"
        xmlns:exsl="http://exslt.org/common"
        exclude-result-prefixes="exsl"
    >
    <xsl:template match="ignore">
        <xsl:choose>
            <xsl:when test="//attr">{//attr}</xsl:when>
            <xsl:otherwise>{def}</xsl:otherwise>
        </xsl:choose>
        <xsl:value-of select="."/></xsl:template>
    <xsl:template mode="payload"  match="attributes"></xsl:template>
    <xsl:template match="/">
        <xsl:apply-templates mode="payload" select="/datadom/attributes"/>
    </xsl:template>
    <xsl:template name="slot" >
        <xsl:param name="slotname" />
        <xsl:param name="defaultvalue" />
        <xsl:choose>
            <xsl:when test="//payload/*[@slot=$slotname]">
               <xsl:copy-of select="//payload/*[@slot=$slotname]"/>
            </xsl:when>
            <xsl:otherwise>
                <xsl:copy-of select="$defaultvalue"/>
            </xsl:otherwise>
        </xsl:choose>
    </xsl:template>
    <xsl:variable name="js-injected-body">
        <xsl:call-template name="slot" >
            <xsl:with-param name="slotname" select="''"/>
            <xsl:with-param name="defaultvalue"/>
        </xsl:call-template>
    </xsl:variable>
</xsl:stylesheet>`);s.importStylesheet(t);const h=s.transformToFragment(n,document),m=(a,f)=>a.querySelector(f),g=m(o,'template[mode="payload"]');if(!h)return console.error("transformation error",{xml:n.outerHTML,xsl:xmlString(t)});const u=[];[...h.querySelectorAll("dce-root>attribute")].forEach(a=>{const f=X(a,"xsl:param"),E=y(a,"name");g.append(f);let N=y(f,"select")?.split("??");N||(N=["//"+E,`'${f.textContent}'`],D(f),f.setAttribute("name",E));let v;if(N?.length>1){f.removeAttribute("select");const x=m(o,'template[match="ignore"]>choose').cloneNode(!0);D(x.firstElementChild).append(w(x,"{"+N[0]+"}")),D(x.lastElementChild).append(w(x,"{"+N[1]+"}")),x.firstElementChild.setAttribute("test",N[0]),f.append(x),v=x.cloneNode(!0)}else v=X(a,"xsl:value-of");v.removeAttribute("name"),a.append(v),a.removeAttribute("select"),u.push(f)}),[...h.querySelectorAll("[value]")].filter(a=>a.getAttribute("value").match(/\{(.*)\?\?(.*)\}/g)).forEach(a=>{const f=y(a,"value");f&&a.setAttribute("value",evalCurly(f))});for(const a of h.childNodes)g.append(o.importNode(a,!0));[...g.querySelectorAll("template")].forEach(a=>g.ownerDocument.documentElement.append(a));const d=m(o,'call-template[name="slot"]'),i=a=>{const f=d.cloneNode(!0),E=y(a,"name")||"";E&&f.firstElementChild.setAttribute("select",`'${E}'`);for(let N of a.childNodes)f.lastElementChild.append(N);return f};S(g,"slot",a=>a.parentNode.replaceChild(i(a),a));const p=tagUid(o);return p.params=u,p}export async function xhrTemplate(e){return await new Promise((t,s)=>{const n=new XMLHttpRequest;n.open("GET",e),n.responseType="document",n.onload=()=>{n.readyState===n.DONE&&n.status===200&&t(n.responseXML||A("div",n.responseText)),s(n.statusText)},n.addEventListener("error",o=>s(o)),n.send()})}export function deepEqual(e,l,t=!1){if(e===l)return!0;if(typeof e!="object"||e===null||typeof l!="object"||l===null||Object.keys(e).length!==Object.keys(l).length)return t;for(let s in e)if(!(s in l)||!deepEqual(e[s],l[s]))return t;return!0}export const assureSlices=(e,l)=>l.split("|").map(t=>t.trim()).map(t=>{if(t.includes("/")){const s=[],n=e.ownerDocument.evaluate(t,e);for(let o;o=n.iterateNext();)s.push(o);return s}return[...e.childNodes].find(s=>s.localName===t)||A(t)}).flat();export function event2slice(e,l,t,s){assureSlices(e,l).map(n=>{const o=e.ownerDocument,h=t.sliceEventSource,m=t.sliceElement,g=()=>[...n.childNodes].filter(u=>u.nodeType===3||u.localName==="value").map(u=>u.remove());if(h.getAttributeNames().map(u=>n.setAttribute(u,y(h,u))),[...n.childNodes].filter(u=>u.localName==="event").map(u=>u.remove()),t.type==="init"&&g(),n.append(obj2node(t,"event",o)),m.hasAttribute("slice-value")){n.setAttribute("value",h.value);const u=xPath(y(m,"slice-value"),n);g(),n.append(w(o,u))}else{const u=h.value||y(m,"value");g(),P(u)?n.append(w(o,u)):n.append(obj2node(u,"value",n.ownerDocument))}})}function S(e,l,t){e.querySelectorAll&&[...e.querySelectorAll(l)].forEach(t)}const q=(e,l)=>(t=>e===t?null:t&&(t.querySelector(l)||q(t,l)))(e.getRootNode()),O=async(e,l)=>{if(!e||!e.trim())return[l];if(e.startsWith("#"))return(t=>{if(!t)return[];const s=t.querySelectorAll(e);if(s.length)return[...s];const n=t.getRootNode();return n===t?[]:q(n)})(l.parentElement);try{const t=await xhrTemplate(e),s=new URL(e,location).hash;if(s){const n=t.querySelectorAll(s);return n.length?[...n]:[l]}return[t]}catch{return[l]}};export function mergeAttr(e,l){if(z(e)){if(!z(l))debugger;return}for(let t of e.attributes)t.namespaceURI?l.setAttributeNS(t.namespaceURI,t.name,t.value):l.setAttribute(t.name,t.value),t.name==="value"&&(l.value=t.value)}export function assureUnique(e,l=0){const t={};for(const s of e.childNodes){const n=y(s,"data-dce-id")||s.dceId||0;if(!t[n])n?t[n]=1:(t[n]=s.dceId=++l,s.setAttribute&&s.setAttribute("data-dce-id",s.dceId));else{const o=s.dceId=n+"-"+t[n]++;s.setAttribute&&s.setAttribute("data-dce-id",o)}s.childNodes.length&&assureUnique(s)}}export function merge(e,l){const t={};for(let s of e.childNodes)t[s.dceId],z(s)?(s.data.trim(),t[s.dceId||0]=s):t[y(s,"data-dce-id")||0]=s;for(let s of[...l]){const n=t[y(s,"data-dce-id")||s.dceId];n?z(s)?n.nodeValue!==s.nodeValue&&(n.nodeValue=s.nodeValue):(mergeAttr(s,n),(n.childNodes.length||s.childNodes.length)&&merge(n,s.childNodes)):e.append(s)}}export function assureUID(e,l){return e.hasAttribute(l)||e.setAttribute(l,crypto.randomUUID()),e.getAttribute(l)}export const evalCurly=e=>[...e?.matchAll(/([^{}]*)(\{)([^}]+)}([^{}]*)/g)].map(t=>`${t[1]}{${xPathDefaults(t[3])}}${t[4]}`).join(""),xPathDefaults=e=>{if(!e.trim())return e;const l=e.split("??"),t=l.shift(),s=xPathDefaults(l.join("??"));return l.length?`concat( ${t} , substring( ${s} , (1+string-length( ${s} )) * string-length( ${t} ) ) )`:e},xPath=(e,l)=>{e=xPathDefaults(e);const t=l.ownerDocument.evaluate(e,l);switch(t.resultType){case XPathResult.NUMBER_TYPE:return t.numberValue;case XPathResult.STRING_TYPE:return t.stringValue}let s="";for(let n;n=t.iterateNext();)s+=n.textContent;return s},xslTags="stylesheet,transform,import,include,strip-space,preserve-space,output,key,decimal-format,namespace-alias,template,value-of,copy-of,number,apply-templates,apply-imports,for-each,sort,if,choose,when,otherwise,attribute-set,call-template,with-param,variable,param,text,processing-instruction,element,attribute,comment,copy,message,fallback".split(","),toXsl=(e,l)=>{const t=A("xsl:"+e.localName);for(let s of e.attributes)t.setAttribute(s.name,s.value);for(;e.firstChild;)t.append(e.firstChild);if(e.parentElement)e.parentElement.replaceChild(t,e);else{const s=e.parentElement||l,n=[...s.childNodes];n.forEach((o,h)=>{o===e&&(n[h]=t)}),s.replaceChildren(...n)}};export class CustomElement extends HTMLElement{static observedAttributes=["src","tag","hidden"];async connectedCallback(){const l=await O(y(this,"src"),this),t=y(this,"tag"),s=t||"dce-"+crypto.randomUUID();for(const d of l)S(d.templateNode||d.content||d,"style",i=>{const p=i.closest("slot"),a=p?`slot[name="${p.name}"]`:"";i.innerHTML=`${s} ${a}{${i.innerHTML}}`,this.append(i)});const n=l.map(d=>createXsltFromDom(d)),o=n.map((d,i)=>(i=new XSLTProcessor,i.importStylesheet(d),i));Object.defineProperty(this,"xsltString",{get:()=>n.map(d=>xmlString(d)).join(`
`)});const h=this,m=[...this.templateNode.querySelectorAll("[slice]")],g=m.map(d=>y(d,"slice")).filter(d=>!d.includes("/")).filter((d,i,p)=>p.indexOf(d)===i),u=n.reduce((d,i)=>(i.params&&d.push(...i.params),d),[]);class T extends HTMLElement{static get observedAttributes(){return u.map(i=>y(i,"name"))}#e=0;connectedCallback(){let i=this.childNodes;if(this.firstElementChild?.tagName==="TEMPLATE"){const c=this.firstElementChild;c.remove(),i=c.content.childNodes;for(const r of[...c.content.childNodes])if(r.localName==="style"){const b=assureUID(this,"data-dce-style");r.innerHTML=`${s}[data-dce-style="${b}"]{${r.innerHTML}}`,c.insertAdjacentElement("beforebegin",r)}else r.nodeType===1?c.insertAdjacentElement("beforebegin",r):r.nodeType===3&&c.insertAdjacentText("beforebegin",r.data)}const p=xml2dom("<datadom/>").documentElement,a=(c,r="")=>(b=>(r&&b.append(w(p,r)),b))(p.ownerDocument.createElement(c));j(p,"payload",i,_),this.innerHTML="",j(p,"attributes",this.attributes,c=>a(c.nodeName,c.value)),j(p,"dataset",Object.keys(this.dataset),c=>a(c,this.dataset[c]));const f=j(p,"slice",g,c=>a(c,"")),E=c=>xPath(c,f);this.xml=p;const N=[],v=()=>{const c={};for(let r;r=N.pop();){const b=y(r.sliceElement,"slice");c[b]||(event2slice(f,b,r,this),c[b]=r)}Object.keys(c).length!==0&&C()};let x;this.onSlice=c=>{c.stopPropagation?.(),c.sliceEventSource=c.currentTarget||c.target,N.push(c),x||(x=setTimeout(()=>{v(),x=0},10))};const C=this.transform=()=>{if(this.#e)debugger;this.#e=1,o.map((r,b)=>{const $=r.transformToFragment(p.ownerDocument,document);return $||console.error(`XSLT transformation error. xsl:
`,xmlString(n[b]),`
xml:
`,xmlString(p)),$}).map(r=>{r&&(assureUnique(r),merge(this,r.childNodes))}),T.observedAttributes.map(r=>{let b=y(this.firstElementChild,r);b!==y(this,r)&&(this.setAttribute(r,b),this.#t(r,b))}),S(this,"[slice]",r=>{if(!r.dceInitialized){r.dceInitialized=1;const b=y(r,"slice-event");(b||"change").split(" ").forEach($=>(r.localName==="slice"?r.parentElement:r).addEventListener($,I=>{I.sliceElement=r,this.onSlice(I)})),(!b||b.includes("init"))&&(r.hasAttribute("slice-value")||r.hasAttribute("value")||r.value?this.onSlice({type:"init",target:r,sliceElement:r}):r.value=E(y(r,"slice")))}}),this.#e=0};C(),v()}#t(i,p){let a=this.xml.querySelector(`attributes>${i}`);a?D(a).append(w(a,p)):(a=A(i,p,this.xml),this.xml.querySelector("attributes").append(a))}attributeChangedCallback(i,p,a){!this.xml||this.#e||(this.#t(i,a),this.transform())}get dce(){return h}}if(t)window.customElements.define(t,T);else{const d=s;this.setAttribute("tag",d),window.customElements.define(d,T);const i=document.createElement(d);this.getAttributeNames().forEach(p=>i.setAttribute(p,this.getAttribute(p))),i.append(...[...this.childNodes].filter(p=>p.localName!=="style")),this.append(i)}}get templateNode(){return this.firstElementChild?.tagName==="TEMPLATE"?this.firstElementChild.content:this}get dce(){return this}get xslt(){return xml2dom(this.xsltString)}}window.customElements.define("custom-element",CustomElement);export default CustomElement;
//# sourceMappingURL=custom-element.js.map
