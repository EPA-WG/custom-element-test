const v="http://www.w3.org/1999/XSL/Transform",S="http://www.w3.org/1999/xhtml",C="http://exslt.org/common",U="urn:schemas-epa-wg:dce",N=(e,l)=>e.getAttribute?.(l),A=e=>e.nodeType===3,L=(e,l="")=>(t=>(t.innerText=l||"",t))(document.createElement(e)),z=(e,l)=>(e.ownerDocument||e).createTextNode(l),q=(e,l,t="")=>(s=>(s.innerText=t||"",s))(document.createElementNS(e,l)),I=e=>(e?.setAttribute("xmlns:xsl",v),e),X=e=>(e?.setAttribute("xmlns:xhtml",S),I(e));function H(e){}export function xml2dom(e){return new DOMParser().parseFromString(e,"application/xml")}export function xmlString(e){return new XMLSerializer().serializeToString(e)}function w(e,l,t,s){const n=c=>e.ownerDocument.createElement(c),p=((c,x,u)=>(x.append(u=n(c)),u))(l,e);return[...t].forEach(c=>p.append(s(c))),p}function M(e){return e.slot||(e.setAttribute||(e=L("span",e.textContent.replaceAll(`
`,""))),e.setAttribute("slot","")),e}export function Json2Xml(e,l){if(typeof e=="string")return e;const t=typeof l!="string";if(e instanceof Array)return t&&(l="array"),"<"+l+">"+e.map(function(o){return Json2Xml(o,l)}).join()+"</"+l+">";t&&(l="r"),l=l.replace(/[^a-z0-9\-]/gi,"_");var s={},n=["<"+l+" "];for(let o in e)typeof e[o]=="object"?s[o]=e[o]:n.push(o.replace(/[^a-z0-9\-]/gi,"_")+'="'+e[o].toString().replace(/&/gi,"&#38;")+'"');if(s){n.push(">");for(let o in s)n.push(Json2Xml(s[o],o));n.push("</"+l+">")}else n.push("/>");return n.join(`
`)}export function tagUid(e){if(T(e,"*",l=>[...l.childNodes].filter(t=>t.nodeType===3).forEach(t=>{if(t.parentNode.localName==="style")return;const s=t.data.matchAll(/{([^}]*)}/g);if(s){let n=0,o=c=>z(t,c||""),p=[];if([...s].forEach(c=>{c.index>n&&p.push(o(c.input.substring(n,c.index)));const x=e.querySelector("value-of").cloneNode();x.setAttribute("select",c[1]),p.push(x),n=c.index+c[0].length}),n<t.data.length&&p.push(o(t.data.substring(n,t.data.length))),p.length){for(let c of p)l.insertBefore(c,t);l.removeChild(t)}}})),"all"in e){let l=1;for(let t of e.all)t.setAttribute&&!t.tagName.startsWith("xsl:")&&t.setAttribute("data-dce-id",""+l++)}return e}export function createXsltFromDom(e,l="xsl:stylesheet"){if(e.tagName===l||e.documentElement?.tagName===l)return tagUid(e);const t=xml2dom(`<xsl:stylesheet version="1.0" xmlns:xsl="${v}" xmlns:xhtml="${S}" xmlns:exsl="${C}" exclude-result-prefixes="exsl" >   
        <xsl:output method="xml" />
        <xsl:template match="/"><dce-root xmlns="${S}"><xsl:apply-templates select="*"/></dce-root></xsl:template>
        <xsl:template match="*[name()='template']"><xsl:apply-templates mode="sanitize" select="*|text()"/></xsl:template>
        <xsl:template match="*"><xsl:apply-templates mode="sanitize" select="*|text()"/></xsl:template>
        <xsl:template match="*[name()='svg']|*[name()='math']"><xsl:apply-templates mode="sanitize" select="."/></xsl:template>
        <xsl:template mode="sanitize" match="*[count(text())=1 and count(*)=0]"><xsl:copy><xsl:apply-templates mode="sanitize" select="@*"/><xsl:value-of select="text()"/></xsl:copy></xsl:template>
        <xsl:template mode="sanitize" match="xhtml:*[count(text())=1 and count(*)=0]"><xsl:element name="{local-name()}"><xsl:apply-templates mode="sanitize" select="@*"/><xsl:value-of select="text()"/></xsl:element></xsl:template>
        <xsl:template mode="sanitize" match="*|@*"><xsl:copy><xsl:apply-templates mode="sanitize" select="*|@*|text()"/></xsl:copy></xsl:template>
        <xsl:template mode="sanitize" match="text()[normalize-space(.) = '']"/>
        <xsl:template mode="sanitize" match="text()"><dce-text><xsl:copy/></dce-text></xsl:template>
        <xsl:template mode="sanitize" match="xsl:value-of|*[name()='slot']"><dce-text><xsl:copy><xsl:apply-templates mode="sanitize" select="*|@*|text()"/></xsl:copy></dce-text></xsl:template>
        <xsl:template mode="sanitize" match="xhtml:*"><xsl:element name="{local-name()}"><xsl:apply-templates mode="sanitize" select="*|@*|text()"/></xsl:element></xsl:template>
    </xsl:stylesheet>`),s=new XSLTProcessor,n=(i=>{T(i,"script",h=>h.remove());const g=i.firstElementChild?.content||i.content,b=h=>{const E=xml2dom("<xhtml/>"),a=E.importNode(h,!0);return E.replaceChild(a,E.documentElement),X(a)};if(g){const h=L("div");return[...g.childNodes].map(E=>h.append(E.cloneNode(!0))),b(h)}return b(i.documentElement||i.body||i)})(e),o=xml2dom(`<xsl:stylesheet version="1.0"
        xmlns:xsl="${v}"
        xmlns:xhtml="${S}"
        xmlns:dce="urn:schemas-epa-wg:dce"
        xmlns:exsl="http://exslt.org/common"
        exclude-result-prefixes="exsl"
    >
    <xsl:template match="ignore"><xsl:value-of select="."/></xsl:template>
    <xsl:template mode="payload"  match="attributes"></xsl:template>
    <xsl:template match="/">
        <xsl:apply-templates mode="payload" select="/datadom/attributes"/>
    </xsl:template>
    <xsl:template name="slot" >
        <xsl:param name="slotname" />
        <xsl:param name="defaultvalue" />
        <xsl:choose>
            <xsl:when test="//payload/*[@slot=$slotname]">
               <xsl:copy-of select="//payload/*[@slot=$slotname]"/>
            </xsl:when>
            <xsl:otherwise>
                <xsl:copy-of select="$defaultvalue"/>
            </xsl:otherwise>
        </xsl:choose>
    </xsl:template>
    <xsl:variable name="js-injected-body">
        <xsl:call-template name="slot" >
            <xsl:with-param name="slotname" select="''"/>
            <xsl:with-param name="defaultvalue"/>
        </xsl:call-template>
    </xsl:variable>
</xsl:stylesheet>`);s.importStylesheet(t);const p=s.transformToFragment(n,document),c=(i,g)=>i.querySelector(g),x=c(o,'template[mode="payload"]');if(!p)return console.error("transformation error",{xml:n.outerHTML,xsl:xmlString(t)});for(const i of p.childNodes)x.append(o.importNode(i,!0));[...x.querySelectorAll("template")].forEach(i=>x.ownerDocument.documentElement.append(i));const r=c(o,'call-template[name="slot"]'),f=i=>{const g=r.cloneNode(!0),b=N(i,"name")||"";b&&g.firstElementChild.setAttribute("select",`'${b}'`);for(let h of i.childNodes)g.lastElementChild.append(h);return g};return T(x,"slot",i=>i.parentNode.replaceChild(f(i),i)),tagUid(o)}export async function xhrTemplate(e){return await new Promise((t,s)=>{const n=new XMLHttpRequest;n.open("GET",e),n.responseType="document",n.onload=()=>{n.readyState===n.DONE&&n.status===200&&t(n.responseXML||L("div",n.responseText)),s(n.statusText)},n.addEventListener("error",o=>s(o)),n.send()})}export function deepEqual(e,l,t=!1){if(e===l)return!0;if(typeof e!="object"||e===null||typeof l!="object"||l===null||Object.keys(e).length!==Object.keys(l).length)return t;for(let s in e)if(!(s in l)||!deepEqual(e[s],l[s]))return t;return!0}export function injectSlice(e,l,t){const o=typeof t=="string"?((p,c="")=>(x=>(x.append(z(e,c||"")),x))(e.ownerDocument.createElement(p)))(l,t):document.adoptNode(xml2dom(Json2Xml(t,l)).documentElement);[...e.children].filter(p=>p.localName===l).map(p=>p.remove()),o.data=t,e.append(o)}function T(e,l,t){e.querySelectorAll&&[...e.querySelectorAll(l)].forEach(t)}const $=(e,l)=>(t=>e===t?null:t&&(t.querySelector(l)||$(t,l)))(e.getRootNode()),R=async(e,l)=>{if(!e||!e.trim())return[l];if(e.startsWith("#"))return(t=>{if(!t)return[];const s=t.querySelectorAll(e);if(s.length)return[...s];const n=t.getRootNode();return n===t?[]:$(n)})(l.parentElement);try{const t=await xhrTemplate(e),s=new URL(e,location).hash;if(s){const n=t.querySelectorAll(s);return n.length?[...n]:[l]}return[t]}catch{return[l]}};export function mergeAttr(e,l){if(A(e)){if(!A(l))debugger;return}for(let t of e.attributes)t.namespaceURI?l.setAttributeNS(t.namespaceURI,t.name,t.value):l.setAttribute(t.name,t.value)}export function assureUnique(e,l=0){const t={};for(const s of e.childNodes){const n=N(s,"data-dce-id")||s.dceId||0;if(!t[n])n?t[n]=1:(t[n]=s.dceId=++l,s.setAttribute&&s.setAttribute("data-dce-id",s.dceId));else{const o=s.dceId=n+"-"+t[n]++;s.setAttribute&&s.setAttribute("data-dce-id",o)}s.childNodes.length&&assureUnique(s)}}export function merge(e,l){const t={};for(let s of e.childNodes)t[s.dceId],A(s)?(s.data.trim(),t[s.dceId||0]=s):t[N(s,"data-dce-id")||0]=s;for(let s of[...l]){const n=t[N(s,"data-dce-id")||s.dceId];n?A(s)?n.nodeValue!==s.nodeValue&&(n.nodeValue=s.nodeValue):(mergeAttr(n,s),(n.childNodes.length||s.childNodes.length)&&merge(n,s.childNodes)):e.append(s)}}export function assureUID(e,l){return e.hasAttribute(l)||e.setAttribute(l,crypto.randomUUID()),e.getAttribute(l)}export class CustomElement extends HTMLElement{async connectedCallback(){const l=await R(N(this,"src"),this),t=N(this,"tag"),s=t||"dce-"+crypto.randomUUID();for(const u of l)T(u.templateNode||u.content||u,"style",r=>{const f=r.closest("slot"),i=f?`slot[name="${f.name}"]`:"";r.innerHTML=`${s} ${i}{${r.innerHTML}}`,this.append(r)});const n=l.map(u=>createXsltFromDom(u)),o=n.map((u,r)=>(r=new XSLTProcessor,r.importStylesheet(u),r));Object.defineProperty(this,"xsltString",{get:()=>n.map(u=>xmlString(u)).join(`
`)});const p=this,c=[...this.templateNode.querySelectorAll("[slice]")].map(u=>N(u,"slice"));class x extends HTMLElement{connectedCallback(){if(this.firstElementChild?.tagName==="TEMPLATE"){const a=this.firstElementChild;for(const m of[...a.content.childNodes])if(m.localName==="style"){const y=assureUID(this,"data-dce-style");m.innerHTML=`${s}[data-dce-style="${y}"]{${m.innerHTML}}`,a.insertAdjacentElement("beforebegin",m)}else m.nodeType===1?a.insertAdjacentElement("beforebegin",m):m.nodeType===3&&a.insertAdjacentText("beforebegin",m.data);a.remove()}const r=xml2dom("<datadom/>").documentElement,f=(a,m="")=>(y=>(m&&y.append(z(r,m)),y))(r.ownerDocument.createElement(a));w(r,"payload",this.childNodes,M),this.innerHTML="",w(r,"attributes",this.attributes,a=>f(a.nodeName,a.value)),w(r,"dataset",Object.keys(this.dataset),a=>f(a,this.dataset[a]));const i=w(r,"slice",c,a=>f(a,""));this.xml=r;const g=[],b=()=>{const a={};for(let m;m=g.pop();){const y=N(m.target,"slice");a[y]||(injectSlice(i,y,typeof m.detail=="object"?{...m.detail}:m.detail),a[y]=m)}Object.keys(a).length!==0&&E()};let h;this.onSlice=a=>{a.stopPropagation?.();const m=N(a.target,"slice");deepEqual(a.detail,[...i.children].find(y=>y.localName===m)?.data)||(g.push(a),h||(h=setTimeout(()=>{b(),h=0},10)))};const E=()=>{o.map((d,D)=>{const j=d.transformToFragment(r.ownerDocument,document);return j||console.error(`XSLT transformation error. xsl:
`,xmlString(n[D]),`
xml:
`,xmlString(r)),j}).map(d=>{d&&(assureUnique(d),merge(this,d.childNodes))});const m=d=>this.onSlice({detail:d[N(d,"slice-prop")||"value"],target:d}),y=d=>d.hasAttribute("slice-prop")||d.hasAttribute("value")||d.value;T(this,"[slice]",d=>{d.dceInitialized||(d.dceInitialized=1,d.addEventListener(N(d,"slice-update")||"change",()=>m(d)),y(d)&&m(d))})};E(),b()}get dce(){return p}}if(t)window.customElements.define(t,x);else{const u=s;window.customElements.define(u,x);const r=document.createElement(u);this.getAttributeNames().forEach(f=>r.setAttribute(f,this.getAttribute(f))),r.append(...[...this.childNodes].filter(f=>f.localName!=="style")),this.append(r)}}get templateNode(){return this.firstElementChild?.tagName==="TEMPLATE"?this.firstElementChild.content:this}get dce(){return this}get xslt(){return xml2dom(this.xsltString)}}window.customElements.define("custom-element",CustomElement);export default CustomElement;
//# sourceMappingURL=custom-element.js.map
