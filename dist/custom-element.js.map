{
  "version": 3,
  "sources": ["../src/custom-element.js"],
  "sourcesContent": ["const XML_DECLARATION = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>'\r\n, XSL_NS_URL = 'http://www.w3.org/1999/XSL/Transform';\r\n\r\n// const log = x => console.debug( new XMLSerializer().serializeToString( x ) );\r\n\r\nconst create = ( tag, t='' ) =>\r\n{\r\n    const e = document.createElement( tag );\r\n    if(t) e.innerText = t;\r\n    return e;\r\n}\r\nfunction xml2dom( xmlString )\r\n{\r\n    return new DOMParser().parseFromString( XML_DECLARATION + xmlString, \"application/xml\" )\r\n}\r\nfunction bodyXml( dce )\r\n{   const s = new XMLSerializer().serializeToString( dce );\r\n    return s.substring( s.indexOf( '>' ) + 1, s.lastIndexOf( '<' ) );\r\n}\r\nfunction slot2xsl( s )\r\n{   const v = document.createElementNS( XSL_NS_URL, 'value-of' );\r\n    v.setAttribute( 'select', `//*[@slot=\"${ s.name }\"]` );\r\n    s.parentNode.replaceChild( v, s );\r\n}\r\nfunction injectData( root, sectionName, arr, cb  )\r\n{\r\n    const inject = ( tag, parent, s ) =>\r\n                {\r\n                    parent.append( s = create( tag ) );\r\n                    return s;\r\n                };\r\n    const l = inject( sectionName, root );\r\n    [ ...arr ].forEach( e => l.append( cb(e) ) );\r\n}\r\nfunction assureSlot( e )\r\n{   if( !e.slot )\r\n    {   if( !e.setAttribute )\r\n            e = create( 'span', e.textContent.replaceAll('\\n','') );\r\n        e.setAttribute( 'slot', '' )\r\n    }\r\n    return e;\r\n}\r\nexport class CustomElement extends HTMLElement\r\n{\r\n    constructor()\r\n    {   super();\r\n\r\n        [ ...this.getElementsByTagName( 'slot' ) ].forEach( slot2xsl );\r\n        const p = new XSLTProcessor();\r\n        p.importStylesheet( xml2dom( `<xsl:stylesheet version=\"1.0\"\r\n    xmlns:xsl=\"${XSL_NS_URL}\">\r\n  <xsl:output method=\"html\" />\r\n\r\n  <xsl:template match=\"/\">\r\n    <xsl:apply-templates select=\"//attributes\"/>\r\n  </xsl:template>\r\n  <xsl:template match=\"attributes\">\r\n    ${ bodyXml(this) }\r\n  </xsl:template>\r\n\r\n</xsl:stylesheet>` ) );\r\n        const tag =  this.getAttribute( 'tag' );\r\n        tag && window.customElements.define( tag, class extends HTMLElement\r\n        {\r\n            constructor()\r\n            {\r\n                super();\r\n                const x = create( 'div' );\r\n                injectData( x, 'payload'    , this.childNodes, assureSlot );\r\n                injectData( x, 'attributes' , this.attributes, e=>create( e.nodeName, e.value ) );\r\n                injectData( x, 'dataset'    , Object.keys( this.dataset ), k=>create( k, this.dataset[ k ] )  );\r\n                const f = p.transformToFragment( x, document );\r\n                this.innerHTML = '';\r\n                [...f.childNodes].forEach(e=>this.appendChild(e));\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nwindow.customElements.define( 'custom-element', CustomElement );\r\nexport default CustomElement;"],
  "mappings": "AAAA,MAAMA,EAAkB,yCACtBC,EAAa,uCAITC,EAAS,CAAEC,EAAKC,EAAE,KACxB,CACI,MAAMC,EAAI,SAAS,cAAeF,CAAI,EACtC,OAAGC,IAAGC,EAAE,UAAYD,GACbC,CACX,EACA,SAASC,EAASC,EAClB,CACI,OAAO,IAAI,UAAU,EAAE,gBAAiBP,EAAkBO,EAAW,iBAAkB,CAC3F,CACA,SAASC,EAASC,EAClB,CAAI,MAAMC,EAAI,IAAI,cAAc,EAAE,kBAAmBD,CAAI,EACrD,OAAOC,EAAE,UAAWA,EAAE,QAAS,GAAI,EAAI,EAAGA,EAAE,YAAa,GAAI,CAAE,CACnE,CACA,SAASC,EAAUD,EACnB,CAAI,MAAME,EAAI,SAAS,gBAAiBX,EAAY,UAAW,EAC3DW,EAAE,aAAc,SAAU,cAAeF,EAAE,QAAU,EACrDA,EAAE,WAAW,aAAcE,EAAGF,CAAE,CACpC,CACA,SAASG,EAAYC,EAAMC,EAAaC,EAAKC,EAC7C,CAMI,MAAMC,GALS,CAAEf,EAAKgB,EAAQT,KAEdS,EAAO,OAAQT,EAAIR,EAAQC,CAAI,CAAE,EAC1BO,IAELK,EAAaD,CAAK,EACpC,CAAE,GAAGE,CAAI,EAAE,QAASX,GAAKa,EAAE,OAAQD,EAAGZ,CAAC,CAAE,CAAE,CAC/C,CACA,SAASe,EAAYf,EACrB,CAAI,OAAKA,EAAE,OACEA,EAAE,eACHA,EAAIH,EAAQ,OAAQG,EAAE,YAAY,WAAW;AAAA,EAAK,EAAE,CAAE,GAC1DA,EAAE,aAAc,OAAQ,EAAG,GAExBA,CACX,CACO,aAAM,sBAAsB,WACnC,CACI,aACA,CAAI,MAAM,EAEN,CAAE,GAAG,KAAK,qBAAsB,MAAO,CAAE,EAAE,QAASM,CAAS,EAC7D,MAAMU,EAAI,IAAI,cACdA,EAAE,iBAAkBf,EAAS;AAAA,iBACpBL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOVO,EAAQ,IAAI;AAAA;AAAA;AAAA,kBAGA,CAAE,EACb,MAAML,EAAO,KAAK,aAAc,KAAM,EACtCA,GAAO,OAAO,eAAe,OAAQA,EAAK,cAAc,WACxD,CACI,aACA,CACI,MAAM,EACN,MAAMmB,EAAIpB,EAAQ,KAAM,EACxBW,EAAYS,EAAG,UAAe,KAAK,WAAYF,CAAW,EAC1DP,EAAYS,EAAG,aAAe,KAAK,WAAYjB,GAAGH,EAAQG,EAAE,SAAUA,EAAE,KAAM,CAAE,EAChFQ,EAAYS,EAAG,UAAe,OAAO,KAAM,KAAK,OAAQ,EAAGC,GAAGrB,EAAQqB,EAAG,KAAK,QAASA,EAAI,CAAG,EAC9F,MAAMC,EAAIH,EAAE,oBAAqBC,EAAG,QAAS,EAC7C,KAAK,UAAY,GACjB,CAAC,GAAGE,EAAE,UAAU,EAAE,QAAQnB,GAAG,KAAK,YAAYA,CAAC,CAAC,CACpD,CACJ,CAAC,CACL,CACJ,CAEA,OAAO,eAAe,OAAQ,iBAAkB,aAAc,EAC9D,eAAe",
  "names": ["XML_DECLARATION", "XSL_NS_URL", "create", "tag", "t", "e", "xml2dom", "xmlString", "bodyXml", "dce", "s", "slot2xsl", "v", "injectData", "root", "sectionName", "arr", "cb", "l", "parent", "assureSlot", "p", "x", "k", "f"]
}
