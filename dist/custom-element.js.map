{
  "version": 3,
  "sources": ["../src/custom-element.js"],
  "sourcesContent": ["const XSL_NS_URL  = 'http://www.w3.org/1999/XSL/Transform'\n,     HTML_NS_URL = 'http://www.w3.org/1999/xhtml'\n,     EXSL_NS_URL = 'http://exslt.org/common'\n,     DCE_NS_URL  =\"urn:schemas-epa-wg:dce\";\n\n// const log = x => console.debug( new XMLSerializer().serializeToString( x ) );\n\nconst attr = (el, attr)=> el.getAttribute?.(attr)\n,   isText = e => e.nodeType === 3\n,   isString = s => typeof s === 'string'\n,   isNode = e => e && typeof e.nodeType === 'number'\n,   create = ( tag, t = '', d=document ) => ( e => ((t && e.append(createText(d.ownerDocument||d, t))),e) )((d.ownerDocument || d ).createElement( tag ))\n,   createText = ( d, t) => (d.ownerDocument || d ).createTextNode( t )\n,   removeChildren = n => { while(n.firstChild) n.firstChild.remove(); return n; }\n,   emptyNode = n => {  n.getAttributeNames().map( a => n.removeAttribute(a) ); return removeChildren(n); }\n,   createNS = ( ns, tag, t = '' ) => ( e => ((e.innerText = t||''),e) )(document.createElementNS( ns, tag ))\n,   xslNs = x => ( x?.setAttribute('xmlns:xsl', XSL_NS_URL ), x )\n,   xslHtmlNs = x => ( x?.setAttribute('xmlns:xhtml', HTML_NS_URL ), xslNs(x) )\n,   cloneAs = (p,tag) =>\n{   const px = p.ownerDocument.createElementNS(p.namespaceURI,tag);\n    for( let a of p.attributes)\n        px.setAttribute(a.name, a.value);\n    while( p.firstChild )\n        px.append(p.firstChild);\n    return px;\n}\n\n    function\nASSERT(x)\n{\n    // if(!x)\n    //     debugger\n}\n    export function\nxml2dom( xmlString )\n{\n    return new DOMParser().parseFromString( xmlString, \"application/xml\" )\n}\n    export function\nxmlString(doc){ return new XMLSerializer().serializeToString( doc ) }\n\n    function\ninjectData( root, sectionName, arr, cb )\n{   const create = ( tag ) => root.ownerDocument.createElement( tag );\n    const inject = ( tag, parent, s ) =>\n    {   parent.append( s = create( tag ) );\n        return s;\n    };\n    const l = inject( sectionName, root );\n    [ ...arr ].forEach( e => l.append( cb( e ) ) );\n    return l;\n}\n\n    function\nassureSlot( e )\n{\n    if( !e.slot )\n    {\n        if( !e.setAttribute )\n            e = create( 'span', e.textContent.replaceAll( '\\n', '' ) );\n        e.setAttribute( 'slot', '' )\n    }\n    return e;\n}\n\n    export function\nJson2Xml( o, tag )\n{\n    if( typeof o === 'string' )\n        return o;\n\n    const noTag = \"string\" != typeof tag;\n\n    if( o instanceof Array )\n    {   noTag &&  (tag = 'array');\n        return \"<\"+tag+\">\"+o.map(function(el){ return Json2Xml(el,tag); }).join()+\"</\"+tag+\">\";\n    }\n    noTag &&  (tag = 'r');\n    tag=tag.replace( /[^a-z0-9\\-]/gi,'_' );\n    var oo  = {}\n        ,   ret = [ \"<\"+tag+\" \"];\n    for( let k in o )\n        if( typeof o[k] == \"object\" )\n            oo[k] = o[k];\n        else\n            ret.push( k.replace( /[^a-z0-9\\-]/gi,'_' ) + '=\"'+o[k].toString().replace(/&/gi,'&#38;')+'\"');\n    if( oo )\n    {   ret.push(\">\");\n        for( let k in oo )\n            ret.push( Json2Xml( oo[k], k ) );\n        ret.push(\"</\"+tag+\">\");\n    }else\n        ret.push(\"/>\");\n    return ret.join('\\n');\n}\n\n    export function\nobj2node( o, tag, doc )\n{   const t = typeof o;\n    if( t === 'function'){debugger}\n    if( t === 'string' )\n        return create(tag,o,doc);\n    if( t === 'number' )\n        return create(tag,''+o,doc);\n\n    if( o instanceof Array )\n    {   const ret = create('array');\n        o.map( ae => ret.append( obj2node(ae,tag,doc)) );\n        return ret\n    }\n    const ret = create(tag,'',doc);\n    for( let k in o )\n        if( isNode(o[k]) || typeof o[k] ==='function' || o[k] instanceof Window )\n            continue\n        else\n            if( typeof o[k] !== \"object\" )\n                ret.setAttribute(k, o[k] );\n            else\n                ret.append(obj2node(o[k], k, doc))\n    return ret;\n}\n    export function\ntagUid( node )\n{   // {} to xsl:value-of\n    forEach$(node,'*',d => [...d.childNodes].filter( e=>e.nodeType === 3 ).forEach( e=>\n    {   if( e.parentNode.localName === 'style' )\n            return;\n        const m = e.data.matchAll( /{([^}]*)}/g );\n        if(m)\n        {   let l = 0\n            , txt = t => createText(e,t||'')\n            ,  tt = [];\n            [...m].forEach(t=>\n            {   if( t.index > l )\n                    tt.push( txt( t.input.substring( l, t.index ) ))\n                const v = node.querySelector('value-of').cloneNode();\n                v.setAttribute('select', t[1] );\n                tt.push(v);\n                l = t.index+t[0].length;\n            })\n            if( l < e.data.length)\n                tt.push( txt( e.data.substring(l,e.data.length) ));\n            if( tt.length )\n            {   for( let t of tt )\n                    d.insertBefore(t,e);\n                d.removeChild(e);\n            }\n        }\n    }));\n\n    if( 'all' in node ) {\n        let i= 1;\n        for( let e of node.all )\n            e.setAttribute && !e.tagName.startsWith('xsl:') && e.setAttribute('data-dce-id', '' + i++)\n    }\n    return node\n}\n    export function\ncreateXsltFromDom( templateNode, S = 'xsl:stylesheet' )\n{\n    if( templateNode.tagName === S || templateNode.documentElement?.tagName === S )\n        return tagUid(templateNode)\n    const sanitizeXsl = xml2dom(`<xsl:stylesheet version=\"1.0\" xmlns:xsl=\"${ XSL_NS_URL }\" xmlns:xhtml=\"${ HTML_NS_URL }\" xmlns:exsl=\"${EXSL_NS_URL}\" exclude-result-prefixes=\"exsl\" >\n        <xsl:output method=\"xml\" />\n        <xsl:template match=\"/\"><dce-root xmlns=\"${ HTML_NS_URL }\"><xsl:apply-templates select=\"*\"/></dce-root></xsl:template>\n        <xsl:template match=\"*[name()='template']\"><xsl:apply-templates mode=\"sanitize\" select=\"*|text()\"/></xsl:template>\n        <xsl:template match=\"*\"><xsl:apply-templates mode=\"sanitize\" select=\"*|text()\"/></xsl:template>\n        <xsl:template match=\"*[name()='svg']|*[name()='math']\"><xsl:apply-templates mode=\"sanitize\" select=\".\"/></xsl:template>\n        <xsl:template mode=\"sanitize\" match=\"*[count(text())=1 and count(*)=0]\"><xsl:copy><xsl:apply-templates mode=\"sanitize\" select=\"@*\"/><xsl:value-of select=\"text()\"/></xsl:copy></xsl:template>\n        <xsl:template mode=\"sanitize\" match=\"xhtml:*[count(text())=1 and count(*)=0]\"><xsl:element name=\"{local-name()}\"><xsl:apply-templates mode=\"sanitize\" select=\"@*\"/><xsl:value-of select=\"text()\"/></xsl:element></xsl:template>\n        <xsl:template mode=\"sanitize\" match=\"*|@*\"><xsl:copy><xsl:apply-templates mode=\"sanitize\" select=\"*|@*|text()\"/></xsl:copy></xsl:template>\n        <xsl:template mode=\"sanitize\" match=\"text()[normalize-space(.) = '']\"/>\n        <xsl:template mode=\"sanitize\" match=\"text()\"><dce-text><xsl:copy/></dce-text></xsl:template>\n        <xsl:template mode=\"sanitize\" match=\"xsl:value-of|*[name()='slot']\"><dce-text><xsl:copy><xsl:apply-templates mode=\"sanitize\" select=\"*|@*|text()\"/></xsl:copy></dce-text></xsl:template>\n        <xsl:template mode=\"sanitize\" match=\"xhtml:*\"><xsl:element name=\"{local-name()}\"><xsl:apply-templates mode=\"sanitize\" select=\"*|@*|text()\"/></xsl:element></xsl:template>\n    </xsl:stylesheet>`)\n    const sanitizeProcessor = new XSLTProcessor()\n    ,   tc = (n =>\n        {\n            forEach$(n,'script', s=> s.remove() );\n            const xslRoot = n.content ?? n.firstElementChild?.content ?? n.body ?? n;\n            xslTags.forEach( tag => forEach$( xslRoot, tag, el=>toXsl(el,xslRoot) ) );\n            const e = n.firstElementChild?.content || n.content\n            , asXmlNode = r => {\n                const d = xml2dom( '<xhtml/>' )\n                ,     n = d.importNode(r, true);\n                d.replaceChild(n,d.documentElement);\n                return xslHtmlNs(n);\n            };\n            if( e )\n            {   const t = create('div');\n                [ ...e.childNodes ].map( c => t.append(c.cloneNode(true)) )\n                return asXmlNode(t)\n            }\n            return  asXmlNode(n.documentElement || n.body || n)\n        })(templateNode)\n    ,   xslDom = xml2dom(\n        `<xsl:stylesheet version=\"1.0\"\n        xmlns:xsl=\"${ XSL_NS_URL }\"\n        xmlns:xhtml=\"${ HTML_NS_URL }\"\n        xmlns:dce=\"urn:schemas-epa-wg:dce\"\n        xmlns:exsl=\"http://exslt.org/common\"\n        exclude-result-prefixes=\"exsl\"\n    >\n    <xsl:template match=\"ignore\">\n        <xsl:choose>\n            <xsl:when test=\"//attr\">{//attr}</xsl:when>\n            <xsl:otherwise>{def}</xsl:otherwise>\n        </xsl:choose>\n        <xsl:value-of select=\".\"/></xsl:template>\n    <xsl:template mode=\"payload\"  match=\"attributes\"></xsl:template>\n    <xsl:template match=\"/\">\n        <xsl:apply-templates mode=\"payload\" select=\"/datadom/attributes\"/>\n    </xsl:template>\n    <xsl:template name=\"slot\" >\n        <xsl:param name=\"slotname\" />\n        <xsl:param name=\"defaultvalue\" />\n        <xsl:choose>\n            <xsl:when test=\"//payload/*[@slot=$slotname]\">\n               <xsl:copy-of select=\"//payload/*[@slot=$slotname]\"/>\n            </xsl:when>\n            <xsl:otherwise>\n                <xsl:copy-of select=\"$defaultvalue\"/>\n            </xsl:otherwise>\n        </xsl:choose>\n    </xsl:template>\n    <xsl:variable name=\"js-injected-body\">\n        <xsl:call-template name=\"slot\" >\n            <xsl:with-param name=\"slotname\" select=\"''\"/>\n            <xsl:with-param name=\"defaultvalue\"/>\n        </xsl:call-template>\n    </xsl:variable>\n</xsl:stylesheet>`\n        );\n\n    sanitizeProcessor.importStylesheet( sanitizeXsl );\n\n    const fr = sanitizeProcessor.transformToFragment(tc, document)\n    ,   $ = (e,css) => e.querySelector(css)\n    ,   payload = $( xslDom, 'template[mode=\"payload\"]');\n    if( !fr )\n        return console.error(\"transformation error\",{ xml:tc.outerHTML, xsl: xmlString( sanitizeXsl ) });\n    const params = [];\n    [...fr.querySelectorAll('dce-root>attribute')].forEach( a=>\n    {\n        const p = cloneAs(a,'xsl:param')\n        ,  name = attr(a,'name');\n        payload.append(p);\n        let select = attr(p,'select')?.split('??')\n        if( !select)\n        {   select = ['//'+name, `'${p.textContent}'`];\n            emptyNode(p);\n            p.setAttribute('name',name);\n        }\n        let val;\n        if( select?.length>1 ){\n            p.removeAttribute('select');\n            const c = $( xslDom, 'template[match=\"ignore\"]>choose').cloneNode(true);\n            emptyNode(c.firstElementChild).append( createText(c,'{'+select[0]+'}'));\n            emptyNode(c.lastElementChild ).append( createText(c,'{'+select[1]+'}'));\n            c.firstElementChild.setAttribute('test',select[0]);\n            p.append(c);\n            val = c.cloneNode(true);\n        }else\n            val=cloneAs(a,'xsl:value-of');\n        val.removeAttribute('name');\n        a.append(val);\n        a.removeAttribute('select');\n        params.push(p)\n    });\n    [...fr.querySelectorAll('[value]')].filter(el=>el.getAttribute('value').match( /\\{(.*)\\?\\?(.*)\\}/g )).forEach(el=>\n    {   const v = attr(el,'value');\n        if(v)\n            el.setAttribute('value', evalCurly(v));\n    });\n    for( const c of fr.childNodes )\n        payload.append(xslDom.importNode(c,true))\n\n    const embeddedTemplates = [...payload.querySelectorAll('template')];\n    embeddedTemplates.forEach(t=>payload.ownerDocument.documentElement.append(t));\n\n    const   slotCall = $(xslDom,'call-template[name=\"slot\"]')\n    ,       slot2xsl = s =>\n    {   const v = slotCall.cloneNode(true)\n        ,  name = attr(s,'name') || '';\n        name && v.firstElementChild.setAttribute('select',`'${ name }'`)\n        for( let c of s.childNodes)\n            v.lastElementChild.append(c)\n        return v\n    }\n\n    forEach$( payload,'slot', s => s.parentNode.replaceChild( slot2xsl(s), s ) )\n\n    const ret = tagUid(xslDom)\n    ret.params = params;\n    return ret;\n}\n    export async function\nxhrTemplate(src)\n{\n    const dom = await new Promise((resolve,reject)=>\n    {   const xhr = new XMLHttpRequest();\n        xhr.open(\"GET\", src);\n        xhr.responseType = \"document\";\n        // xhr.overrideMimeType(\"text/xml\");\n        xhr.onload = () =>\n        {   if( xhr.readyState === xhr.DONE && xhr.status === 200 )\n                resolve( xhr.responseXML ||  create('div', xhr.responseText ) )\n            reject(xhr.statusText)\n        };\n        xhr.addEventListener(\"error\", ev=>reject(ev) );\n\n        xhr.send();\n    })\n    return dom\n}\n    export function\ndeepEqual(a, b, O=false)\n{\n    if( a === b )\n        return true;\n\n    if( (typeof a !== \"object\" || a === null) || (typeof b !== \"object\" || b === null)\n        || Object.keys(a).length !== Object.keys(b).length )\n        return O;\n\n    for( let k in a )\n        if( !(k in b) || !deepEqual( a[k], b[k] ) )\n            return O\n    return true;\n}\n    export const\nassureSlices = ( root, names) =>\n    names.split('|').map(n=>n.trim()).map( xp =>\n    {   if(xp.includes('/'))\n        {   const ret = [], r = root.ownerDocument.evaluate( xp, root );\n            for( let n; n = r.iterateNext(); )\n                ret.push( n )\n            return ret\n        }\n        return [...root.childNodes].find(n=>n.localName === xp) || create(xp);\n    }).flat();\n\n/**\n *\n * @param x slice node\n * @param sliceNames slice name, xPath in /datadom/slice/\n * @param ev Event obj\n * @param dce\n */\n    export function\nevent2slice( x, sliceNames, ev, dce )\n{\n    // evaluate slices[]\n    // inject @attributes\n    // inject event\n    // evaluate slice-value\n    // slice[i] = slice-value\n    assureSlices(x,sliceNames).map( s =>\n    {\n        const d = x.ownerDocument\n        ,    el = ev.sliceEventSource\n        ,   sel = ev.sliceElement\n        ,   cleanSliceValue = ()=>[...s.childNodes].filter(n=>n.nodeType===3 || n.localName==='value').map(n=>n.remove());\n        el.getAttributeNames().map( a => s.setAttribute( a, attr(el,a) ) );\n        [...s.childNodes].filter(n=>n.localName==='event').map(n=>n.remove());\n        ev.type==='init' && cleanSliceValue();\n        s.append( obj2node( ev, 'event', d ) );\n        if( sel.hasAttribute('slice-value') )\n        {   if( el.value === undefined)\n                s.removeAttribute('value')\n            else\n                s.setAttribute('value', el.value );\n            const v = xPath( attr( sel, 'slice-value'),s );\n            cleanSliceValue();\n            s.append( createText( d, v ) );\n        }else\n        {   const v = el.value ?? attr( sel, 'value' ) ;\n            cleanSliceValue();\n            if( v === null || v === undefined )\n                [...s.childNodes].filter(n=>n.localName!=='event').map(n=>n.remove());\n            else\n                if( isString(v) )\n                    s.append( createText( d, v) );\n                else\n                    s.append( obj2node(v,'value',s.ownerDocument) )\n        }\n    })\n}\n\nfunction forEach$( el, css, cb){\n    if( el.querySelectorAll )\n        [...el.querySelectorAll(css)].forEach(cb)\n}\nconst getByHashId = ( n, id )=> ( p => n===p? null: (p && ( p.querySelector(id) || getByHashId(p,id) ) ))( n.getRootNode() )\nconst loadTemplateRoots = async ( src, dce )=>\n{\n    if( !src || !src.trim() )\n        return [dce]\n    if( src.startsWith('#') )\n        return ( n =>\n        {   if(!n) return []\n            const a = n.querySelectorAll(src)\n            if( a.length )\n                return [...a]\n            const r = n.getRootNode();\n            return r===n ? []: getByHashId(r)\n        })(dce.parentElement)\n    try\n    {   // todo cache\n        const dom = await xhrTemplate(src)\n        const hash = new URL(src, location).hash\n        if( hash )\n        {   const ret = dom.querySelectorAll(hash);\n            if( ret.length )\n                return [...ret]\n            return [dce]\n        }\n        return [dom]\n    }catch (error){ return [dce]}\n}\nexport function mergeAttr( from, to )\n{   if( isText(from) )\n    {\n        if( !isText(to) ){ debugger }\n        return\n    }\n    for( let a of from.attributes)\n    {   a.namespaceURI? to.setAttributeNS( a.namespaceURI, a.name, a.value ) : to.setAttribute( a.name, a.value )\n        if( a.name === 'value')\n            to.value = a.value\n    }\n}\nexport function assureUnique(n, id=0)\n{\n    const m = {}\n    for( const e of n.childNodes )\n    {\n        const a = attr(e,'data-dce-id') || e.dceId || 0;\n        if( !m[a] )\n        {   if( !a )\n            {   m[a] = e.dceId = ++id;\n                if( e.setAttribute )\n                    e.setAttribute('data-dce-id', e.dceId )\n            }else\n                m[a] = 1;\n        }else\n        {   const v = e.dceId = a + '-' + m[a]++;\n            if( e.setAttribute )\n                e.setAttribute('data-dce-id', v )\n        }\n        e.childNodes.length && assureUnique(e)\n    }\n}\nexport function merge( parent, fromArr )\n{\n    if(!fromArr.length)\n        return removeChildren(parent);\n    const id2old = {};\n    for( let c of parent.childNodes)\n    {   ASSERT( !id2old[c.dceId] );\n        if( isText(c) )\n        {   ASSERT( c.data.trim() );\n            id2old[c.dceId || 0] = c;\n        } else\n            id2old[attr(c, 'data-dce-id') || 0] = c;\n    }\n    for( let e of [...fromArr] )\n    {   const k = attr(e, 'data-dce-id') || e.dceId;\n        const o = id2old[ k ];\n        if( o )\n        {   if( isText(e) )\n            {   if( o.nodeValue !== e.nodeValue )\n                    o.nodeValue = e.nodeValue;\n            }else\n            {   mergeAttr(e,o)\n                if( o.childNodes.length || e.childNodes.length )\n                    merge(o, e.childNodes)\n            }\n            delete id2old[ k ]\n        }else\n            parent.append( e )\n    }\n    for( let v of Object.values(id2old) )\n        v.remove();\n}\nexport function assureUID(n,attr)\n{   if( !n.hasAttribute(attr) )\n        n.setAttribute(attr, crypto.randomUUID());\n    return n.getAttribute(attr)\n}\nexport const evalCurly = s =>\n{   const exp = [...s?.matchAll( /([^{}]*)(\\{)([^}]+)}([^{}]*)/g ) ].map(l=>`${l[1]}{${ xPathDefaults(l[3] )}}${l[4]}`);\n    return exp.join('');\n}\nexport const xPathDefaults = x=>\n{   if(!x.trim())\n        return x;\n    const xx = x.split('??')\n    ,      a = xx.shift()\n    ,      b = xPathDefaults(xx.join('??'));\n\n    return xx.length ? `concat( ${a} , substring( ${b} , (1+string-length( ${b} )) * string-length( ${a} ) ) )`: x\n    // return xx.length ? `${a}|(${xPathDefaults(xx.join('??'))})[not(${a})]`: a\n}\nexport const xPath = (x,root)=>\n{   x = xPathDefaults(x);\n\n    const it = root.ownerDocument.evaluate(x, root);\n    switch( it.resultType )\n    {   case XPathResult.NUMBER_TYPE: return it.numberValue;\n        case XPathResult.STRING_TYPE: return it.stringValue;\n    }\n\n    let ret = '';\n    for( let n ;n=it.iterateNext(); )\n        ret += n.textContent;\n    return ret\n}\nexport const xslTags = 'stylesheet,transform,import,include,strip-space,preserve-space,output,key,decimal-format,namespace-alias,template,value-of,copy-of,number,apply-templates,apply-imports,for-each,sort,if,choose,when,otherwise,attribute-set,call-template,with-param,variable,param,text,processing-instruction,element,attribute,comment,copy,message,fallback'.split(',');\nexport const toXsl = (el, defParent) => {\n    const x = create('xsl:'+el.localName);\n    for( let a of el.attributes )\n        x.setAttribute( a.name, a.value );\n    while(el.firstChild)\n        x.append(el.firstChild);\n    if( el.parentElement )\n        el.parentElement.replaceChild( x, el );\n    else\n    {  const p = (el.parentElement || defParent)\n        ,  arr = [...p.childNodes];\n        arr.forEach((n, i) => {\n            if (n === el)\n                arr[i] = x;\n        });\n        p.replaceChildren(...arr);\n    }\n};\n\n    export class\nCustomElement extends HTMLElement\n{\n    static observedAttributes = ['src','tag','hidden'];\n    async connectedCallback()\n    {\n        const templateRoots = await loadTemplateRoots( attr( this, 'src' ), this )\n        ,               tag = attr( this, 'tag' )\n        ,           tagName = tag ? tag : 'dce-'+crypto.randomUUID();\n\n        for( const t of templateRoots )\n            forEach$(t.templateNode||t.content||t, 'style',s=>{\n                const slot = s.closest('slot');\n                const sName = slot ? `slot[name=\"${slot.name}\"]`:'';\n                s.innerHTML = `${tagName} ${sName}{${s.innerHTML}}`;\n                this.append(s);\n            })\n        const templateDocs = templateRoots.map( n => createXsltFromDom( n ) )\n        , xp = templateDocs.map( (td, p) =>{ p = new XSLTProcessor(); p.importStylesheet( td ); return p })\n\n        Object.defineProperty( this, \"xsltString\", { get: ()=>templateDocs.map( td => xmlString(td) ).join('\\n') });\n\n        const dce = this\n        , sliceNodes = [...this.templateNode.querySelectorAll('[slice]')]\n        , sliceNames = sliceNodes.map(e=>attr(e,'slice')).filter(n=>!n.includes('/')).filter((v, i, a)=>a.indexOf(v) === i)\n        , declaredAttributes = templateDocs.reduce( (ret,t) => { if( t.params ) ret.push( ...t.params ); return ret; }, [] );\n\n        class DceElement extends HTMLElement\n        {\n            static get observedAttributes(){ return declaredAttributes.map( a=>attr(a,'name')); }\n            #inTransform = 0;\n            connectedCallback()\n            {   let payload = this.childNodes;\n                if( this.firstElementChild?.tagName === 'TEMPLATE' )\n                {\n                    const t = this.firstElementChild;\n                    t.remove();\n                    payload = t.content.childNodes;\n\n                    for( const n of [...t.content.childNodes] )\n                        if( n.localName === 'style' ){\n                            const id = assureUID(this,'data-dce-style')\n                            n.innerHTML= `${tagName}[data-dce-style=\"${id}\"]{${n.innerHTML}}`;\n                            t.insertAdjacentElement('beforebegin',n);\n                        }else\n                            if(n.nodeType===1)\n                                t.insertAdjacentElement('beforebegin',n);\n                            else if(n.nodeType===3)\n                                t.insertAdjacentText('beforebegin',n.data);\n                }\n                const x = xml2dom( '<datadom/>' ).documentElement;\n                const createXmlNode = ( tag, t = '' ) => ( e =>\n                {   if( t )\n                        e.append( createText( x, t ))\n                    return e;\n                })(x.ownerDocument.createElement( tag ))\n                injectData( x, 'payload'    , payload , assureSlot );\n                this.innerHTML='';\n                injectData( x, 'attributes' , this.attributes, e => createXmlNode( e.nodeName, e.value ) );\n                injectData( x, 'dataset', Object.keys( this.dataset ), k => createXmlNode( k, this.dataset[ k ] ) );\n                const sliceRoot = injectData( x, 'slice', sliceNames, k => createXmlNode( k, '' ) )\n                ,     sliceXPath = x => xPath(x, sliceRoot);\n                this.xml = x;\n\n                const sliceEvents=[];\n                const applySlices = ()=>\n                {   const processed = {}\n\n                    for(let ev; ev = sliceEvents.pop(); )\n                    {   const s = attr( ev.sliceElement, 'slice');\n                        if( processed[s] )\n                            continue;\n                        event2slice( sliceRoot, s, ev, this );\n                        processed[s] = ev;\n                    }\n                    Object.keys(processed).length !== 0 && transform();\n                }\n                let timeoutID;\n\n                this.onSlice = ev=>\n                {   ev.stopPropagation?.();\n                    ev.sliceEventSource = ev.currentTarget || ev.target;\n                    sliceEvents.push(ev);\n                    if( !timeoutID )\n                        timeoutID = setTimeout(()=>\n                        {   applySlices();\n                            timeoutID =0;\n                        },10);\n                };\n                const transform = this.transform = ()=>\n                {   if(this.#inTransform){ debugger }\n                    this.#inTransform = 1;\n\n                    const ff = xp.map( (p,i) =>\n                    {   const f = p.transformToFragment(x.ownerDocument, document)\n                        if( !f )\n                            console.error( \"XSLT transformation error. xsl:\\n\", xmlString(templateDocs[i]), '\\nxml:\\n', xmlString(x) );\n                        return f\n                    });\n                    ff.map( f =>\n                    {   if( !f )\n                            return;\n                        assureUnique(f);\n                        merge( this, f.childNodes )\n                    })\n\n                    DceElement.observedAttributes.map( a =>\n                    {   let v = attr(this.firstElementChild,a);\n                        if( v !== attr(this,a) )\n                        {   this.setAttribute( a, v );\n                            this.#applyAttribute( a, v );\n                        }\n                    })\n\n                    forEach$( this,'[slice]', el =>\n                    {   if( !el.dceInitialized )\n                        {   el.dceInitialized = 1;\n                            const evs = attr(el,'slice-event');\n                            (evs || 'change')\n                                .split(' ')\n                                .forEach( t=> (el.localName==='slice'? el.parentElement : el)\n                                                .addEventListener( t, ev=>\n                                                {   ev.sliceElement = el;\n                                                    this.onSlice(ev)\n                                                } ));\n                            if( !evs || evs.includes('init') )\n                            {   if( el.hasAttribute('slice-value') || el.hasAttribute('value') || el.value )\n                                    this.onSlice({type:'init', target: el, sliceElement:el })\n                                else\n                                    el.value = sliceXPath( attr(el,'slice') )\n                            }\n                        }\n                    });\n                    this.#inTransform = 0;\n                };\n                transform();\n                applySlices();\n            }\n            #applyAttribute(name, newValue)\n            {   let a = this.xml.querySelector(`attributes>${name}`);\n                if( a )\n                    emptyNode(a).append( createText(a,newValue) );\n                else\n                {   a = create( name, newValue, this.xml );\n                    this.xml.querySelector('attributes').append( a );\n                }\n            }\n            attributeChangedCallback(name, oldValue, newValue)\n            {   if( !this.xml || this.#inTransform )\n                    return;\n                this.#applyAttribute(name, newValue);\n                this.transform(); // needs throttling\n            }\n\n            get dce(){ return dce }\n        }\n        if(tag)\n            window.customElements.define( tag, DceElement);\n        else\n        {   const t = tagName;\n            this.setAttribute('tag', t );\n            window.customElements.define( t, DceElement);\n            const el = document.createElement(t);\n            this.getAttributeNames().forEach(a=>el.setAttribute(a,this.getAttribute(a)));\n            el.append(...[...this.childNodes].filter( e => e.localName!=='style') );\n            this.append(el);\n        }\n    }\n    get templateNode(){ return this.firstElementChild?.tagName === 'TEMPLATE'? this.firstElementChild.content : this }\n    get dce(){ return this }\n\n    get xslt(){ return xml2dom( this.xsltString ) }\n}\n\nwindow.customElements.define( 'custom-element', CustomElement );\nexport default CustomElement;\n"],
  "mappings": "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",
  "names": ["XSL_NS_URL", "HTML_NS_URL", "EXSL_NS_URL", "DCE_NS_URL", "attr", "el", "isText", "isString", "s", "isNode", "create", "tag", "t", "d", "e", "createText", "removeChildren", "n", "emptyNode", "a", "createNS", "ns", "xslNs", "x", "xslHtmlNs", "cloneAs", "p", "px", "ASSERT", "xmlString", "doc", "injectData", "root", "sectionName", "arr", "cb", "l", "parent", "assureSlot", "o", "noTag", "oo", "ret", "k", "ae", "node", "forEach$", "m", "txt", "tt", "v", "i", "templateNode", "S", "sanitizeXsl", "sanitizeProcessor", "tc", "xslRoot", "asXmlNode", "r", "c", "xslDom", "fr", "$", "css", "payload", "params", "name", "select", "val", "slotCall", "slot2xsl", "src", "resolve", "reject", "xhr", "ev", "b", "O", "names", "xp", "sliceNames", "dce", "sel", "cleanSliceValue", "getByHashId", "id", "loadTemplateRoots", "dom", "hash", "from", "to", "fromArr", "id2old", "xx", "it", "defParent", "templateRoots", "tagName", "slot", "sName", "templateDocs", "td", "sliceNodes", "declaredAttributes", "DceElement", "#inTransform", "createXmlNode", "sliceRoot", "sliceXPath", "sliceEvents", "applySlices", "processed", "transform", "timeoutID", "f", "#applyAttribute", "evs", "newValue", "oldValue"]
}
